@model Dsf.Olss.Data.Entities.Role

@{
    ViewBag.Title = "Edit Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permissions = ViewBag.Permission as IEnumerable<SelectListItem>;
}

@StatusLabel.Create(@Model.IsDraft, Model.IsSubmit, Model.IsActive)
<a id="backButton" href="@Url.Action("Index", "Role")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
<hr />

@using (Html.BeginForm("Edit", "Role", FormMethod.Post, new { @data_validate = "parsley" }))
{
    @Html.HiddenFor(model => Model.IdRole)
    @Html.HiddenFor(model => Model.IsDraft)
    @Html.HiddenFor(model => Model.IsSubmit)
    @Html.HiddenFor(model => Model.IsActive)
    @Html.HiddenFor(model => Model.CreatedDate)
    @Html.HiddenFor(model => Model.IsDeleted)

    <section class="panel">
        <header class="panel-heading">Edit Role</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(modelItem => Model.RoleName)
                        @Html.TextBoxFor(modelItem => Model.RoleName, new { @class = "form-control", @data_required = "true", @placeholder = "Role Name", @data_parsley_maxlength = "50" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(modelItem => Model.Remarks)
                        @Html.TextBoxFor(modelItem => Model.Remarks, new { @class = "form-control", @placeholder = "Remarks", @data_parsley_maxlength = "200" })
                    </div>
                </div>
            </div>
        </div>
    </section>
    @*<section class="panel">
        <header class="panel-heading">Role Permission</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.CheckBoxListFor("selectedPermission", permissions)
                        @foreach (var info in permissions)
                            {

                              <span>
                                  <input type="checkbox" class="checkbox" name="selectedRoles" value="@info.IdPermission" id="@info.IdPermission" />
                                  <label for="@info.PermissionName">@info.PermissionName</label>
                              </span>
                            }
                    </div>
                </div>
            </div>
        </div>
    </section>*@
    <section class="panel">
        <footer class="panel-footer bg-light lter">
            @StateButton.Create("add")
        </footer>
    </section>
}

@section Scripts{
    <script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/bootbox/bootbox.min.js")"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var roleHub = $.connection.Role;
        roleHub.client.OnSaveLock = function(id) {
            if (id == '@Model.IdRole') {
                bootbox.confirm("Data has been changes by other user, do you want to refresh the page?", function(result) {
                    if (result != false) {
                        location.reload();
                    }
                });
            }
        };

        roleHub.client.OnStatusLock = function(id) {
            if (id == '@Model.IdRole') {
                bootbox.alert("Status has been changes by other user, you will be redirected to list page ..", function() {
                    window.location.href = '@Url.Action("Index", "Role")';
                });
            }
        };
        @*$(function() {

            var roleHub = $.connection.roles;

            roleHub.client.lockRole = function() { };

            $.connection.hub.start().done(function() {
                 roleHub.server.lock(@Model.IdRole);

                $('#backButton').click(function() {
                    roleHub.server.unlock(@Model.IdRole);
                });
            });



            //window.onbeforeunload = function(e) {
            //    $.connection.hub.stop().done(function() { console.log('done'); })
            //        .fail(function() { console.log('Could not stop!'); });
            //};

        });*@



    </script>

}