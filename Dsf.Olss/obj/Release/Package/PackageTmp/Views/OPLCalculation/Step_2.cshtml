@model Dsf.Olss.Models.OPLCBasicFinanceViewModel
@using System.Web.UI.WebControls;

@section Styles{
    <link rel="stylesheet" href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") type="text/css" />
}
@{
    var remark = System.Convert.ToInt32(Model.OPLRemarks);
    var step = 2;
    ViewBag.Title = "Calculation of Operating Lease - Step 2";
    var success = ViewBag.Success ?? TempData["Success"];
    var error = ViewBag.Error ?? TempData["Error"];
}
@Message.Display(success, error)
<a href="@Url.Action("index")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
@if (Model.IsDraft)
{
    <label class="label label-default label-lg pull-right">draft</label>
}
else if (Model.IsSubmitted)
{
    <label class="label label-info label-lg pull-right">submitted</label>
}
else if (Model.IsValid == true)
{
    <label class="label label-success label-lg pull-right">valid</label>
}
else if (Model.CreateDate != null)
{
    <label class="label label-default label-lg bg-light pull-right">invalid</label>
}
<hr />
<section class="tab-pane" id="wizard">
    <div class="panel">
        @Html.WizardNav(6, 2, remark, x => @Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = x, id = @Model.IdOPLCalculation }))
    </div>
</section>
<div class="panel label-panel">
    <div class="row" style="padding-bottom:5px; padding-top:5px;">
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left:15px; float:left;"><i class="fa fa-user text-danger"></i> Created by</div><div style="float:left; padding-left:15px;">@Html.DisplayFor(o => o.CreateBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Created Date</div><div style="float: left; padding-left: 15px;">@Html.DisplayFor(o => o.CreateDate)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-user text-danger"></i> Last Modified By</div><div style="float: left; padding-left: 15px;">@Html.DisplayFor(o => o.LastModifiedBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Last  Modified Date</div><div style="float: left; padding-left: 15px;">@Html.DisplayFor(o => o.LastModified)</div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "BasicFinance", @data_validate = "parsley" }))
{
    @Html.HiddenFor(o => o.ConnId)
    @Html.HiddenFor(o => o.IdOPLCalculation)
    @Html.HiddenFor(o => o.OPLRemarks)
    @Html.HiddenFor(o => o.LeasePeriod)
    <!-- Input Cost Condition -->
    <section class="panel">
        <header class="panel-heading font-bold">Cost Condition</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Product Price</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ProductPrice, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Product Price", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Dealer Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ProductDiscount, "{0:N0}", new { @class = "form-control currenciesOnly prod_discount", @placeholder = "Dealer Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>ATPM Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ATPMDiscount, "{0:N0}", new { @class = "form-control currenciesOnly prod_discount", @placeholder = "ATPM Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Product Price Total</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ProductPriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Product Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.ProductPriceTotal)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Accessories Price</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesPrice, "{0:N0}", new { @class = "form-control currenciesOnly acc", @placeholder = "Accessories Price", @readonly = "true", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Supplier Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesDiscount, "{0:N0}", new { @class = "form-control currenciesOnly acc", @placeholder = "Supplier Discount", @data_maxlength = "23" })
                        </div>
                        @Html.ValidationMessageFor(o => o.AccesoriesDiscount)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label style="visibility:hidden">Just Hidden Field</label>
                        <input style="visibility:hidden" class="form-control" placeholder="Just Hidden Field" type="text">
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Accessories Price Total</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesPriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Accessories Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.AccesoriesPriceTotal)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Carroserrie Price</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserriePrice, "{0:N0}", new { @class = "form-control currenciesOnly carros", @placeholder = "Carroserrie Pricec", @readonly = "true", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Supplier Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserrieDiscount, "{0:N0}", new { @class = "form-control currenciesOnly carros", @placeholder = "Supplier Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label style="visibility:hidden">Just Hidden Field</label>
                        <input style="visibility:hidden" class="form-control" placeholder="Just Hidden Field" type="text">
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Carroserrie Price Total</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserriePriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Carroserrie Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.CarroserriePriceTotal)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">

                <div class="col-lg-12">
                    <div class="line pull-in"></div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Residual Value Amount Buy</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ResidualValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Residual Value Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Residual Value (%)</label>
                        @Html.TextBoxFor(o => o.ResidualValuePercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Residual Value (%)", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Standard Residual Value (%)</label>
                        @Html.TextBoxFor(o => o.SResidualValuePercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Standard Residual Value (%)", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Standard Residual Value Amount </label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.SResidualValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Standard Residual Value Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </section>

    <!-- Input Cost Condition (Section 2)-->
    <section class="panel">
        <header class="panel-heading font-bold">DSF Finance Condition</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Payment Type</label>
                        @{
    var paymentypelistItems = new List<ListItem>
                        {
                        new ListItem { Text = "In Arrear", Value = "In Arrear" },
                        new ListItem { Text = "In Advance", Value = "In Advance" },
                        };
                        }
                        @Html.DropDownListFor(o => o.PaymentType, new SelectList(paymentypelistItems, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Borrowing Rate Effective (%)</label>
                        @Html.TextBoxFor(o => o.BorrowingEffectivePercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Borrowing Rate Effective (%)", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Spread Effective (%)</label>
                        @Html.TextBoxFor(o => o.SpreadEffectivePercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Spread Effective (%)", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">

                    <div class="form-group">
                        <label>Prime Rate Effective (%)</label>
                        @Html.TextBoxFor(o => o.PrimeEffectivePercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Prime Rate Effective", @data_maxlength = "22", @readonly = "readonly" })
                      
                    </div>
                </div>
             
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Borrowing Rate Flat (%)</label>
                        @Html.TextBoxFor(o => o.BorrowingFlatPercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Borrowing Rate Flat", @data_maxlength = "22", @readonly = "readonly" })
                    </div>
                </div>             
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Prime Rate Flat (%)</label>
                        @Html.TextBoxFor(o => o.PrimeFlatPercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Prime Rate Flat (%)", @data_maxlength = "22", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Spread Flat (%)</label>
                        @Html.TextBoxFor(o => o.SpreadFlatPercent, null, new { @class = "form-control decimalsOnly", @placeholder = "Spread Rate Flat (%)", @data_maxlength = "22", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Administration Fee</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.AdministrationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Administration Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Replacement Unit Cost (monthly)</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.ReplacementCarAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Replacement Car Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Mobilizations Fee</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.MobilizationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Mobilization Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Demobilizations Fee</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.DemobilizationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Demobilizations Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Term of Payment (Days)</label>
                        @Html.TextBoxFor(o => o.TermPaymentDays, null, new { @class = "form-control numbersOnly", @placeholder = "Term of Payments", @readonly = "true" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Product</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTProduct, null, new { @class = "form-control decimalsOnly", @placeholder = "Down Payment of Product Before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Period to BAST (Days)</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTProduct, null, new { @class = "form-control numbersOnly", @placeholder = "Time Number of Down Payment of Product to BAST (Day)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement before BAST (%)</label>
                        @Html.TextBoxFor(o => o.PSBeforeBASTProduct, null, new { @class = "form-control decimalsOnly", @placeholder = "Payment Settlement of Product before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Days)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTProduct, null, new { @class = "form-control numbersOnly", @placeholder = "Payment Settlement Period to BAST (Days)" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Carroserie</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTCarroserie, null, new { @class = "form-control decimalsOnly", @placeholder = "DP Before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Period to BAST (Day)</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTCarroserie, null, new { @class = "form-control numbersOnly", @placeholder = "DP Period to BAST (Day)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.PSBeforeBASTCarroserie, null, new { @class = "form-control decimalsOnly", @placeholder = "Payment Settlement Before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Days)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTCarroserie, null, new { @class = "form-control numbersOnly", @placeholder = "Payment Settlement Period to BAST (Days)" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Accesories</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTAccesories, null, new { @class = "form-control decimalsOnly", @placeholder = "DP Before BAST (%)", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>DP Period to BAST (Days)</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTAccesories, null, new { @class = "form-control numbersOnly", @placeholder = "DP Period to BAST (Days)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.PSBeforeBASTAccesories, null, new { @class = "form-control decimalsOnly", @placeholder = "Payment Settlement Before BAST Accessories", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Days)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTAccesories, null, new { @class = "form-control numbersOnly", @placeholder = "Payment Settlement Period to BAST (Days)" })
                    </div>
                </div>
            </div>
        </div>
    </section>


    <!-- Term of Tax & Fee, Payment Cycle -->
    <section class="panel">
        <header class="panel-heading font-bold">Registration Fee  </header>
        <div class="panel-body">

            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Registration Value Rate (%)</label>
                            @Html.TextBoxFor(o => o.RegistrationValueRate, null, new { @class = "form-control decimalsOnly", @placeholder = "Rate of Registration Value", @data_maxlength = "23" })                        
                    </div>
                </div>
               <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Registration Value Amount</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.RegistrationValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Amount of Registration Value", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="panel-footer bg-light lter">
            @if (remark < step)
            {
                <a href="@Url.RouteUrl("OPLCalculation", new { controller = "OPLCalculation", action = "Edit", step = "1", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />

            }
            else
            {
                <a href="@Url.RouteUrl("OPLCalculation", new { controller = "OPLCalculation", action = "Edit", step = "1", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.SuperUser || Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.Admin)
                {
                    if (Model.IsDraft)
                    {
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                    }
                    else if (Model.IsSubmitted)
                    {
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                    }
                }
                if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.User)
                {
                    if (Model.IsDraft)
                    {

                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                    }
                }
                @Html.HiddenFor(o => o.IsValid)
                @Html.HiddenFor(o => o.IsSubmitted)
                @Html.HiddenFor(o => o.IsDraft)
                <a href="@Url.RouteUrl("OPLCalculation", new { controller = "OPLCalculation", action = "Edit", step = "3", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-primary">Next Step <i class="fa fa-chevron-right"></i></a>
            }

        </div>
    </section>
}
@section Scripts{
    <script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/bootbox/bootbox.min.js")"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var OPLCalculationHub = $.connection.OPLCalculation;
        var confirm = false;
        OPLCalculationHub.client.OnSaveLock = function (id, remarks) {
            if (id == '@Model.IdOPLCalculation' && remarks == '@Model.OPLRemarks'&& !confirm) {
                confirm = true;
                bootbox.confirm("Data has been changes by other user, do you want to refresh the page?", function (result) {
                    if (result != false) {
                        location.href = location.href;
                    }
                    confirm = false;
                });
            }
        };

        OPLCalculationHub.client.OnStatusLock = function (id) {
            if (id == '@Model.IdOPLCalculation'&& !confirm) {
                confirm = true;
                bootbox.alert("Status has been changes by other user, you will be redirected to list page ..", function () {
                    window.location.href = '@Url.Action("Index", "OPLCalculation")';
                });
            }
        };
        $.connection.hub.start().done(function () {
            var myClientId = $.connection.hub.id;
            $('#ConnId').val(myClientId);
        });

        $(document).ready(function () {
            alert();
            var periodinyear = @Model.PeriodInYears;

            $('#RegistrationValueRate').change(function(){
                var registrationValueRate =  $('#RegistrationValueRate').val();
                if(registrationValueRate == 0){
                    $('#RegistrationValueAmount').val('0');
                }
                else{
                    var registrationValueAmount = registrationValueRate/100 * productPrice * nper;
                    $('#RegistrationValueAmount').val(registrationValueAmount).formatCurrency();
                }
            });

            $('#RegistrationValueAmount').change(function(){
                var registrationValueAmount =  Number($('#RegistrationValueAmount').val().replace(/,/g, ''));
                if(isNaN(registrationValueAmount) || productPrice == 0){
                    $('#RegistrationValueRate').val('0');
                }
                else{
                    var registrationValueRate = (registrationValueAmount / (productPrice * nper)) * 100;
                    $('#RegistrationValueRate').val(registrationValueRate.toFixed(6));
                }
            });

            var nper = @(Model.LeasePeriod.HasValue ? Model.LeasePeriod.Value : 0);
            var getUrl = '@Url.Action("CalculateRateFlat", "OPLCalculation")';
            var getUrlBorrowing = '@Url.Action("CalculateBorrowingRateFlat", "OPLCalculation")';
            var getUrlSpread = '@Url.Action("CalculateSpreadRateFlat", "OPLCalculation")';
            
            function CalculateBorrowingFlat(borrowingrate, paymenttype){
                var pricenet =  Number($('#ProductPriceTotal').val().replace(/,/g, ''));
                var accesoriesnet =  Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
                var carroseriesnet =  Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
                if(isNaN(pricenet))
                    pricenet = 0;
                if(isNaN(accesoriesnet))
                    accesoriesnet = 0;
                if(isNaN(carroseriesnet))
                    carroseriesnet = 0;

                $.ajax({
                    url: getUrlBorrowing,
                    dataType: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify( { borrowingrate: borrowingrate, nper: nper, paymenttype: paymenttype, pricenet: pricenet, accesoriesnet: accesoriesnet, carroseriesnet: carroseriesnet} ),
                    async: true,
                    processData: false,
                    cache: false,
                    success: function (data) {
                        $('#BorrowingFlatPercent').val(data);
                        CalculatePrimeFlat();
                    },
                    error: function (xhr) {
                        alert('Error on calculate');
                    }
                })
            };
            function CalculateSpreadFlat(borrowingrate, primerate, paymenttype){
                var pricenet =  Number($('#ProductPriceTotal').val().replace(/,/g, ''));
                var accesoriesnet =  Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
                var carroseriesnet =  Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
                if(isNaN(pricenet))
                    pricenet = 0;
                if(isNaN(accesoriesnet))
                    accesoriesnet = 0;
                if(isNaN(carroseriesnet))
                    carroseriesnet = 0;
                
                $.ajax({
                    url: getUrlSpread,
                    dataType: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify( { borrowingrate: borrowingrate, primerate: primerate, nper: nper, paymenttype: paymenttype, pricenet: pricenet, accesoriesnet: accesoriesnet, carroseriesnet: carroseriesnet } ),
                    async: true,
                    processData: false,
                    cache: false,
                    success: function (data) {
                        $('#SpreadFlatPercent').val(data);
                        CalculatePrimeFlat();
                    },
                    error: function (xhr) {
                        alert('Error on calculate');
                    }
                })
            }
            function CalculatePrimeFlat(){
                var borrow = 0;
                var spread = 0;
                if(!isNaN($('#BorrowingFlatPercent').val()))
                    borrow = Number($('#BorrowingFlatPercent').val());
                if(!isNaN($('#SpreadFlatPercent').val()))
                    spread = Number($('#SpreadFlatPercent').val());
                $('#PrimeFlatPercent').val(spread + borrow);
            }
            function CalculatePrimeEffective(){
                var prime = 0;
                var borrow = 0;
                var spread = 0;
                if(!isNaN($('#BorrowingEffectivePercent').val()))
                    borrow = Number($('#BorrowingEffectivePercent').val());
                if(!isNaN($('#SpreadEffectivePercent').val()))
                    spread = Number($('#SpreadEffectivePercent').val());
                $('#PrimeEffectivePercent').val(spread + borrow).change();
            }
            var productPrice = 0;
            var productPriceForRV = 0;
            var productPriceGross = 0
            var productPriceGrossForRV = 0;
            CalculateProductPrice();
            CalculateProductPriceGross();
            function CalculateProductPrice(){
                var productpricetotal =  Number($('#ProductPriceTotal').val().replace(/,/g, ''));
                var accesoriespricetotal =  Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
                var carroserriepricetotal =  Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
                if(isNaN(productpricetotal))
                    productpricetotal = 0;
                if(isNaN(accesoriespricetotal))
                    accesoriespricetotal = 0;
                if(isNaN(carroserriepricetotal))
                    carroserriepricetotal = 0;

                productPrice = productpricetotal + accesoriespricetotal + carroserriepricetotal;
                productPriceForRV = productpricetotal + carroserriepricetotal;
            };

           
            function CalculateProductPriceGross(){
                var productpricegross =  Number($('#ProductPrice').val().replace(/,/g, ''));
                var accesoriespricegross =  Number($('#AccesoriesPrice').val().replace(/,/g, ''));
                var carroserriepricegross =  Number($('#CarroserriePrice').val().replace(/,/g, ''));
                if(isNaN(productpricegross))
                    productpricegross = 0;
                if(isNaN(carroserriepricegross))
                    accesoriespricegross = 0;
                if(isNaN(carroserriepricegross))
                    carroserriepricegross = 0;

                productPriceGross = productpricegross + accesoriespricegross + carroserriepricegross;
                productPriceGrossForRV = productpricegross + carroserriepricegross;
            };

            $('#ProductPriceTotal').change(function(){
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });
            $('#AccesoriesPriceTotal').change(function(){
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });

            $('#CarroserriePriceTotal').change(function(){
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });

            $('#ResidualValuePercent').change(function(){
                alert(productPriceGross);
                var percent = Number($(this).val());
                if(!isNaN(percent)) $('#ResidualValueAmount').val(productPriceForRV * percent / 100).formatCurrency();
            });
          

            $('#ResidualValueAmount').change(function(){
                alert(productPriceGross);
                var amt = Number($(this).val().replace(/,/g, ''));
                if(!isNaN(amt)) $('#ResidualValuePercent').val((amt * 100 / productPriceForRV).toFixed(6));
            });

            //$('#SResidualValuePercent').change(function(){
            //    var percent = Number($(this).val());
            //    if(!isNaN(percent)) $('#SResidualValueAmount').val(productPrice * percent / 100).formatCurrency();
            //});

            //$('#SResidualValueAmount').change(function(){
            //    var amt = Number($(this).val().replace(/,/g, ''));
            //    if(!isNaN(amt)) $('#SResidualValuePercent').val((amt * 100 / productPrice).toFixed(6));
            //});

            $('#SResidualValuePercent').change(function(){
                alert(productPriceGrossForRV);
                var percent = Number($(this).val());
                if(!isNaN(percent)) $('#SResidualValueAmount').val(productPriceGrossForRV * percent / 100).formatCurrency();
            });

            $('#SResidualValueAmount').change(function(){
                alert(productPriceGrossForRV);
                var amt = Number($(this).val().replace(/,/g, ''));
                if(!isNaN(amt)) $('#SResidualValuePercent').val((amt * 100 / productPriceGrossForRV).toFixed(6));
            });

            $('#BorrowingEffectivePercent').change(function () {
                var borrowingrate = Number($(this).val().replace(/,/g, ''));
                if(isNaN(borrowingrate))
                    borrowingrate = 0;
                var paymenttype = $('option:selected', $('select#PaymentType')).text();
                CalculatePrimeEffective();
                CalculateBorrowingFlat(borrowingrate, paymenttype);
                //CalculatePrimeFlat();
            });
            $('#SpreadEffectivePercent').change(function () {
                CalculatePrimeEffective();
                var borrowingrate = Number($('#BorrowingEffectivePercent').val().replace(/,/g, '')) ;
                var primerate = Number($('#PrimeEffectivePercent').val().replace(/,/g, '')) ;
                if(isNaN(borrowingrate))
                    borrowingrate = 0;
                if(isNaN(primerate))
                    primerate = 0;
                var paymenttype = $('option:selected', $('select#PaymentType')).text();
                CalculateSpreadFlat(borrowingrate, primerate, paymenttype);
                //CalculatePrimeFlat();
            });
            //$('#PrimeEffectivePercent').change(function () {
            //    var rate = $(this).val() ;
            //    var paymenttype = $('option:selected', $('select#PaymentType')).text();
            //    CalculatePrimeFlat();
            //});
            $('select#PaymentType').change(function (){
                var paymenttype = $('option:selected', $(this)).text();
                var rate1 = $('#BorrowingEffectivePercent').val() ;
                var rate2 = $('#SpreadEffectivePercent').val() ;
                var rate3 = $('#PrimeEffectivePercent').val() ;
                if(rate1){
                    CalculateBorrowingFlat(rate1, paymenttype);}
                if(rate2){
                    CalculateSpreadFlat(rate1, rate2, paymenttype);}
                if(rate3){
                    CalculatePrimeFlat();}
            });

            $('#ProductPrice').change(function () {
                CalculateProductPriceGross();
                var dealerDiscount = Number($('#ProductDiscount').val().replace(/,/g, ''));
                var atpmDiscount = Number($('#ATPMDiscount').val().replace(/,/g, ''));
                var productPrice = Number($(this).val().replace(/,/g, ''));
                if (!isNaN(productPrice)) {
                    var totalDiscount = 0
                    if (!isNaN(dealerDiscount)) totalDiscount += dealerDiscount;
                    if (!isNaN(atpmDiscount)) totalDiscount += atpmDiscount;
                    $('#ProductPriceTotal').val(productPrice - totalDiscount).formatCurrency().change();
                }
            }).formatCurrency();

            $('.prod_discount').change(function () {
                var productPrice = Number($('#ProductPrice').val().replace(/,/g, ''));
                if (!isNaN(productPrice)) {
                    var totalDiscount = 0
                    var dealerDiscount = Number($('#ProductDiscount').val().replace(/,/g, ''));
                    var atpmDiscount = Number($('#ATPMDiscount').val().replace(/,/g, ''));
                    if (!isNaN(dealerDiscount)) totalDiscount += dealerDiscount;
                    if (!isNaN(atpmDiscount)) totalDiscount += atpmDiscount;
                    $('#ProductPriceTotal').val(productPrice - totalDiscount).formatCurrency().change();
                }
            }).formatCurrency();

            $('.acc').change(function () {
                var accPrice = Number($('#AccesoriesPrice').val().replace(/,/g, ''));
                var accDiscount = Number($('#AccesoriesDiscount').val().replace(/,/g, ''));
                if (!isNaN(accPrice)) {
                    var discount = 0
                    if (!isNaN(accDiscount)) discount = accDiscount;
                    $('#AccesoriesPriceTotal').val(accPrice - discount).formatCurrency().change();
                }
            }).formatCurrency();

            $('.carros').change(function () {
                var carrosPrice = Number($('#CarroserriePrice').val().replace(/,/g, ''));
                var carrosDiscount = Number($('#CarroserrieDiscount').val().replace(/,/g, ''));
                if (!isNaN(carrosPrice)) {
                    var discount = 0
                    if (!isNaN(carrosDiscount)) discount = carrosDiscount;
                    $('#CarroserriePriceTotal').val(carrosPrice - discount).formatCurrency().change();
                }
            }).formatCurrency();

            $(".currenciesOnly").on('keydown', currenciesOnly)
                                      .on('blur', function () { $(this).formatCurrency(); });
            $(".numbersOnly").on('keydown', numbersOnly);
            $(".decimalsOnly").on('keydown', decimalsOnly);
        });
    </script>

    <script src="@Url.Content("~/Content/ui-framework/js/currencyformat/jquery.formatCurrency-1.4.0.js")"></script>
}
