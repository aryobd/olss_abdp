@model Dsf.Olss.Models.OPLProposalViewModel
@using System.Web.UI.WebControls;
@{
    var remark = System.Convert.ToInt32(Model.OPLCalcRemarks);
    var step = 6;
    ViewBag.Title = "Calculation of Operating Lease (Proposal Data)- Step 6";
    var success = ViewBag.Success ?? TempData["Success"];
    var error = ViewBag.Error ?? TempData["Error"];
}
@Message.Display(success, error)
<a href="@Url.Action("Index")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
@if (Model.IsDraft)
{
    <label class="label label-default label-lg pull-right">draft</label>
}
else if (Model.IsSubmitted)
{
    <label class="label label-info label-lg pull-right">submitted</label>
}
else if (Model.IsValid == true)
{
    <label class="label label-success label-lg pull-right">valid</label>
}
else if (Model.CreateDate != null)
{
    <label class="label label-default label-lg bg-light pull-right">invalid</label>
}
<hr />
<section class="tab-pane" id="wizard">
    <div class="panel">
        @Html.WizardNav(6, 6, remark, x => @Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = x, id = @Model.IdOPLCalculation }))
    </div>
</section>
<div class="panel label-panel">
    <table class="table">
        <td class="font-bold"><i class="fa fa-user text-danger"></i> Created by</td>
        <td>@Html.DisplayFor(o => o.CreateBy)</td>
        <td class="font-bold"><i class="fa fa-calendar text-danger"></i> Created Date</td>
        <td>@Html.DisplayFor(o => o.CreateDate)</td>
        <td class="font-bold"><i class="fa fa-user text-danger"></i> Last Modified By</td>
        <td>@Html.DisplayFor(o => o.LastModifiedBy)</td>
        <td class="font-bold"><i class="fa fa-calendar text-danger"></i> Last  Modified Date</td>
        <td>@Html.DisplayFor(o => o.LastModified)</td>
    </table>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { @data_validate = "parsley" }))
{

      <!-- Input Basic Information -->
    <section class="panel">
        <header class="panel-heading font-bold">Proposal Info</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Proposal Number</label>
                        <p class="form-control-static">@Html.DisplayFor(o => o.OPLProposalNumber)</p>
                        @Html.HiddenFor(o => o.OPLProposalNumber)
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Customer Code</label>
                        <p class="form-control-static">
                            @Html.DisplayFor(o => o.CustomerCode)
                        </p>
                        @Html.HiddenFor(o => o.CustomerCode)
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Customer Name</label>
                        <p class="form-control-static">
                            @Html.DisplayFor(o => o.CustomerName)
                        </p>
                        @Html.HiddenFor(o => o.CustomerName)
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Proposal Date (mm/dd/yyyy)</label>
                        <div class="input-group">
                            @Html.TextBoxFor(o => o.ProposalDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker-input", @placeholder = "End Period Plan (mm/dd/yyyy)", data_date_format = "mm/dd/yyyy" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Person In Charge</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>PIC Name</label>
                        @Html.TextBoxFor(o => o.PICName, null, new { @class = "form-control", @placeholder = "PIC Name", @data_required = "true" })
                    </div>
                    @Html.ValidationMessageFor(o => o.PICName)
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>PIC Position</label>
                        @Html.TextBoxFor(o => o.PICPosition, null, new { @class = "form-control", @placeholder = "PIC Position", @data_required = "true" })
                    </div>
                    @Html.ValidationMessageFor(o => o.PICPosition)
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>PIC Phone</label>
                        @Html.TextBoxFor(o => o.PICTelephone, null, new { @class = "form-control", @placeholder = "PIC Phone", @data_required = "true" })
                    </div>
                    @Html.ValidationMessageFor(o => o.PICTelephone)
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>PIC Email</label>
                        @Html.TextBoxFor(o => o.PICEmail, null, new { @class = "form-control", @placeholder = "PIC Email" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Additional Item for Proposal</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Is COP Program?</label>
                        @{
    var coplistitems = new List<ListItem>
                                {
                                      new ListItem { Text = "Yes", Value = "true" },
                                      new ListItem { Text = "No", Value = "false" }
                                };
                        }
                        @Html.DropDownListFor(o => o.IsCOPProgramme, new SelectList(coplistitems, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Proposed By</label>
                        @Html.TextBoxFor(o => o.ProposeBy, null, new { @class = "form-control", @placeholder = "Proposed By" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Purpose of Use</label>
                        @Html.TextBoxFor(o => o.PurposeOfUse, null, new { @class = "form-control", @placeholder = "Purpose of Use", @data_required = "true" })
                    </div>
                    @Html.ValidationMessageFor(o => o.PurposeOfUse)
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Valid Until (mm/dd/yyyy)</label>
                        <div class="input-group">
                            @Html.TextBoxFor(o => o.Validuntil, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker-input", @placeholder = "Valid Until", @data_required = "true", data_date_format = "mm/dd/yyyy" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(o => o.Validuntil)
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Acknowledge By 1</label>
                        @Html.TextBoxFor(o => o.AcknowledgeBy1, null, new { @class = "form-control", @placeholder = "Acknowledge By 1" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Acknowledge By 2</label>
                        @Html.TextBoxFor(o => o.AcknowledgeBy2, null, new { @class = "form-control", @placeholder = "Acknowledge By 2" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Acknowledge By 3</label>
                        @Html.TextBoxFor(o => o.AcknowledgeBy3, null, new { @class = "form-control", @placeholder = "Acknowledge By 3" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Remarks</label>
                        @Html.TextBoxFor(o => o.Remarks, null, new { @class = "form-control", @placeholder = "Remarks" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Approved By</label>
                        @Html.TextBoxFor(o => o.ApproveBy, null, new { @class = "form-control", @placeholder = "Approved By" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>To</label>
                        @Html.TextBoxFor(o => o.To, null, new { @class = "form-control", @placeholder = "To" })
                    </div>
                </div>
            </div>
        </div>
        <footer class="panel-footer">
            @Html.HiddenFor(o => o.IdOPLIProposal)
            @Html.HiddenFor(o => o.IdOPLCalculation)
            @Html.HiddenFor(o => o.OPLCalcRemarks)
            @Html.HiddenFor(o => o.IsValid)
            @Html.HiddenFor(o => o.IsSubmitted)
            @Html.HiddenFor(o => o.IsDraft)
            @Html.HiddenFor(o => o.IsNew)
            @if (remark < step)
            {
                <a href="@Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = "5", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                <input type="submit" class="btn btn-info" value="Save Changes" name="step_6" />
            }
            else
            {

                if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.SuperUser || Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.Admin)
                {
                    if (Model.IsDraft)
                    {
                        <a href="@Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = "5", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_6" />
                        <input type="submit" class="btn btn-primary" value="Submit" name="action" />
                    }
                    else if (Model.IsSubmitted)
                    {
                        <a href="@Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = "5", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_6" />
                    }
                }
                else if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.User)
                {
                    if (Model.IsDraft)
                    {
                        <a href="@Url.RouteUrl("OPLCalculation", new { Controller = "OPLCalculation", Action = "Edit", step = "5", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_6" />
                        <input type="submit" class="btn btn-primary" value="Submit" name="action" />
                    }
                }
            }
        </footer>
    </section>
}

@section Scripts
{
    <script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/datepicker/bootstrap-datepicker.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/bootbox/bootbox.min.js")"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var OPLCalculationHub = $.connection.OPLCalculation;

        OPLCalculationHub.client.OnSaveLock = function (id, remarks) {
            if (id == '@Model.IdOPLCalculation' && remarks == '@Model.OPLCalcRemarks') {
                bootbox.confirm("Data has been changes by other user, do you want to refresh the page?", function (result) {
                    if (result != false) {
                        location.reload();
                    }
                });
            }
        };

        OPLCalculationHub.client.OnStatusLock = function (id) {
            if (id == '@Model.IdOPLCalculation') {
                bootbox.alert("Status has been changes by other user, you will be redirected to list page ..", function () {
                    window.location.href = '@Url.Action("Index", "OPLCalculation")';
                });
            }
        };

        $.connection.hub.start();


        $('#ProposalDate').datepicker().on('changeDate', function () {
            GetValidityMonth();
        });
        $('#Validuntil').datepicker().on('changeDate', function () {
            GetValidityMonth();
        });

        function GetValidityMonth() {

            var date1 = new Date($('#ProposalDate').datepicker().val());
            var date2 = new Date($('#Validuntil').datepicker().val());
            if (date2 < date1) {
                //  var a = $('#LeaseCategory').parsley();
                // window.ParsleyUI.addError(a, "myCustomError", 'End Period Plan Should  Bigger than Start Period');
                $('span[data-valmsg-for=Validuntil]').html("Validity date should be bigger than Proposal Date ");
                $('span[data-valmsg-for=Validuntil]').addClass("text-danger").addClass("text-sm").show();
                $('#Validuntil').val('');
            }
            else {
                $('span[data-valmsg-for=Validuntil]').hide();
                // window.ParsleyUI.removeError($('#LeaseCategory').parsley(), "myCustomError");
            }

        }
    </script>
}