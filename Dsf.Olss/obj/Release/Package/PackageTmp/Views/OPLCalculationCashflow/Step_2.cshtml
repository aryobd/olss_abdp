@model Dsf.Olss.Models.OPLCBasicFinanceCashflowViewModel
@using System.Web.UI.WebControls;

@section Styles{
    <link rel="stylesheet" href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") type="text/css" />
}

<style type="text/css">
    body {
        color: black;
    }
</style>

@{
    var remark = Convert.ToInt32(Model.OPLRemarks);
    var step = 2;
    ViewBag.Title = "Calculation of Operating Lease - Step 2";
    var success = ViewBag.Success ?? TempData["Success"];
    var error = ViewBag.Error ?? TempData["Error"];
}
@Message.Display(success, error)
<a href="@Url.Action("index")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
@if (Model.IsDraft)
{
    <label class="label label-default label-lg pull-right">draft</label>
}
else if (Model.IsSubmitted)
{
    <label class="label label-info label-lg pull-right">submitted</label>
}
else if (Model.IsValid)
{
    <label class="label label-success label-lg pull-right">valid</label>
}
else
{
    <label class="label label-default label-lg bg-light pull-right">invalid</label>
}
<hr />
<section class="tab-pane" id="wizard">
    <div class="panel">
        @Html.WizardNav(6, 2, remark, x => @Url.RouteUrl("OPLCalculationCashflow", new { Controller = "OPLCalculationCashflow", Action = "Edit", step = x, id = @Model.IdOPLCalculation }))
    </div>
</section>
<div class="panel label-panel">
    <div class="row" style="padding-bottom:5px; padding-top:5px;">
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left:15px; float:left;"><i class="fa fa-user text-danger"></i> Created by</div><div style="float:left; padding-left:15px;">@Html.DisplayFor(o => o.CreateBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Created Date</div><div style="float: left; padding-left: 15px;">@Html.DisplayFor(o => o.CreateDate)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-user text-danger"></i> Last Modified By</div><div style="float: left; padding-left: 15px; ">@Html.DisplayFor(o => o.LastModifiedBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Last  Modified Date</div><div style="float: left; padding-left: 15px;">@Html.DisplayFor(o => o.LastModified)</div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "BasicFinance", @data_validate = "parsley" }))
{
    @Html.HiddenFor(o => o.ConnId)
    @Html.HiddenFor(o => o.IdOPLCalculation)
    @Html.HiddenFor(o => o.OPLRemarks)
    @Html.HiddenFor(o => o.LeasePeriod)
    <!-- Input Cost Condition -->
    <section class="panel">
        <header class="panel-heading font-bold">Cost Condition</header>
        <div class="panel-body">
            <header class="panel-heading font-bold bg-info">
                Product
            </header>
            <div class="col-lg-12">
                <div class="line pull-in"></div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Product Price Include VAT IN Unit</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ProductPrice, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Product Price", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Dealer Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ProductDiscount, "{0:N0}", new { @class = "form-control currenciesOnly prod_discount disableAfterValid", @placeholder = "Dealer Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Product Price Total</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ProductPriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Product Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.ProductPriceTotal)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT IN Unit</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatInUnit, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "VAT IN Unit", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Ratio Compensation VAT IN Unit (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInUnit, null, new { @class = "form-control percentOnly disableAfterValid sixdecimal", @placeholder = "Ratio Compensation VAT IN Unit (%)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>ATPM Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ATPMDiscount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "ATPM Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT OUT Discount KTB</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatOutDiscKtb, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "VAT OUT Discount KTB", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>W/H Tax Discount KTB</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.WhTaxDiscKtb, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "W/H Tax Discount KTB", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.WhTaxDiscKtb)
                    </div>
                </div>
            </div>
            <br />
            <header class="panel-heading font-bold bg-info">
                Accessories
            </header>
            <div class="col-lg-12">
                <div class="line pull-in"></div>
            </div>
            @if (!Model.AccessoriesIsExist)
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#divAccessories :input").attr("disabled", true);
                        $("#divAccessories2 :input").attr("disabled", true);
                    });
                </script>
            }
            else
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#AccesoriesPrice").addClass('required');
                    });
                </script>
            }
            <div class="row" id="divAccessories">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Accessories Price (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesPrice, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Accessories Price", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Supplier Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesDiscount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Supplier Discount", @data_maxlength = "23" })
                        </div>
                        @Html.ValidationMessageFor(o => o.AccesoriesDiscount)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT IN Accessories</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatInAcc, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "VAT IN Accessories", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Accessories Price Total (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.AccesoriesPriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Accessories Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.AccesoriesPriceTotal)
                    </div>
                </div>
            </div>
            <div class="row" id="divAccessories2">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Ratio Compensation Accessories (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInAccessories, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid sixdecimal", @placeholder = "Ratio Compensation Accessories (%)" })
                    </div>
                </div>
            </div>
            <br />
            <header class="panel-heading font-bold bg-info">
                Carroserrie
            </header>
            <div class="col-lg-12">
                <div class="line pull-in"></div>
            </div>
            @if (!Model.CarroserrieIsExist)
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#divCarroserrie :input").attr("disabled", true);
                        //$("#divCarroserrie2 :input").attr("disabled", true);
                    });
                </script>
            }
            else
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#CarroserriePrice").addClass('required');
                    });
                </script>
            }
            <div class="row" id="divCarroserrie">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Carroserrie Price (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserriePrice, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Carroserrie Pricec", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Supplier Discount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserrieDiscount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Supplier Discount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT IN Carroserrie</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatInCarr, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "VAT IN Carroserrie", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Carroserrie Price Total (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.CarroserriePriceTotal, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Carroserrie Price Total", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(o => o.CarroserriePriceTotal)
                    </div>
                </div>
            </div>
            <div class="row" id="divCarroserrie2">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Ratio Compensation Carroserrie (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInCarroserrie, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid sixdecimal", @placeholder = "Ratio Compensation Carroserrie (%)" })
                    </div>
                </div>
            </div>
            <br />
            <header class="panel-heading font-bold bg-info">
                Mobilizations / Demobilizations
            </header>
            <div class="col-lg-12">
                <div class="line pull-in"></div>
            </div>
            @if (!Model.MobilizationFeeIsExist)
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#divMobilizations :input").attr("disabled", true);
                    });
                </script>
            }
            else
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#MobilizationFeeAmount").addClass('required');
                    });
                </script>
            }
            <div class="row" id="divMobilizations">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Mobilizations Fee (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.MobilizationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Mobilization Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT IN Mobilizations</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatInMob, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "VAT IN Mobilizations", @data_maxlength = "23", @readonly = "true" }) @*ABDP - X0097536 - POINT 4*@
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Ratio Compensation Mobilizations (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInMobilization, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid sixdecimal", @placeholder = "Ratio Compensation Mobilizations (%)" })
                    </div>
                </div>
            </div>
            @if (!Model.DemobilizationFeeIsExist)
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#divDemobilizations :input").attr("disabled", true);
                    });
                </script>
            }
            else
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#DemobilizationFeeAmount").addClass('required');
                    });
                </script>
            }
            <div class="row" id="divDemobilizations">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Demobilizations Fee (Include VAT IN)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.DemobilizationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Demobilization Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT IN Demobilizations</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatInDemob, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "VAT IN Demobilizations", @data_maxlength = "23", @readonly = "true" }) @*ABDP - X0097536 - POINT 4*@
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Ratio Compensation Demobilizations (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInDemobilization, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid sixdecimal", @placeholder = "Ratio Compensation Demobilizations (%)" })
                    </div>
                </div>
            </div>
            <br />
            <header class="panel-heading font-bold bg-info">
                Replacement Car
            </header>
            <div class="col-lg-12">
                <div class="line pull-in"></div>
            </div>
            @if (!Model.ReplacementCarIsExist)
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#divReplacementCar :input").attr("disabled", true);
                    });
                </script>
            }
            else
            {
                <script>
                    $(document).ready(function()
                    {
                        $("#ReplacementCarAmount").addClass('required');
                    });
                </script>
            }
            <div class="row" id="divReplacementCar">
                @*<div class="col-lg-3 col-md-3">
                        <div class="form-group">
                            <label>Accessories / Carroserrie / Mobilizations Cost Total</label>
                            <div class="input-group">
                                <span class="input-group-addon bg-info">Rp</span>
                                @Html.TextBoxFor(o => o.TotalCaroserriePriceEtc, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Total Carroserrie Etc", @readonly = "true", @data_maxlength = "23" })
                            </div>
                        </div>
                    </div>*@
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Ratio Compensation Acc. / Carr. / Mob. (%)</label>
                        @Html.TextBoxFor(o => o.RatioCompVatInCarrEtc, "{0:##.######}", new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Ratio Compensation Acc. / Carr. / Mob. (%)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Replacement Unit Cost</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ReplacementCarAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Replacement Car Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
            </div><br />
            <header class="panel-heading font-bold bg-info">
                Registration Fee
            </header>
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="radio inline">
                        <label>@Html.RadioButtonFor(o => o.RegistrationFeeBy, "Lessee", new { id = "lessee" })By Lessee</label>
                    </div>
                    <div class="radio inline">
                    </div>
                    <div class="radio inline">
                        @if (Model.RegistrationFeeBy == null)
                        {
                            <label>@Html.RadioButtonFor(o => o.RegistrationFeeBy, "DSF", new { id = "dsf", Checked = "checked" })By DSF</label>
                        }
                        else
                        {
                            <label>@Html.RadioButtonFor(o => o.RegistrationFeeBy, "DSF", new { id = "dsf" })By DSF</label>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>STNK Fee (Full Period)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.StnkFee, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "STNK Fee (Full Period)", @data_maxlength = "23" })
                        </div>
                        @Html.ValidationMessageFor(o => o.StnkFee)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>KEUR Fee (Full Period)</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.KeurFee, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "KEUR Fee (Full Period)", @data_maxlength = "23" })
                        </div>
                        @Html.ValidationMessageFor(o => o.KeurFee)
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Registration Value Amount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.RegistrationValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "Amount of Registration Value", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <header class="panel-heading font-bold bg-info">
                Residual Value
            </header>
            <div class="row">
                <div class="col-lg-12">
                    <div class="line pull-in"></div>
                </div>
                <div class="col-lg-12">
                    <label>*Residual Value = (Product Price + Carroserrie Price) * RV(%)</label>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Residual Value Amount</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.ResidualValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Residual Value Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Residual Value (%)</label>
                        @Html.TextBoxFor(o => o.ResidualValuePercent, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Residual Value (%)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Standard Residual Value (%)</label>
                        @Html.TextBoxFor(o => o.SResidualValuePercent, "{0:N6}", new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Standard Residual Value (%)" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>Standard Residual Value Amount </label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.SResidualValueAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Standard Residual Value Amount", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="form-group">
                        <label>VAT OUT Sold Unit</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.VatOutSoldUnit, "{0:N0}", new { @class = "form-control currenciesOnly", @placeholder = "VAT OUT Sold Unit", @data_maxlength = "23", @readonly = "readonly" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </section>

    <!-- Input Cost Condition (Section 2)-->
    <section class="panel">
        <header class="panel-heading font-bold">DSF Finance Condition</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Payment Type</label>
                        @{
    var paymentypelistItems = new List<ListItem>
                    {
                    new ListItem { Text = "In Arrear", Value = "In Arrear" },
                    new ListItem { Text = "In Advance", Value = "In Advance" },
                    };
                        }
                        @Html.DropDownListFor(o => o.PaymentType, new SelectList(paymentypelistItems, "Value", "Text"), new { @class = "form-control disableAfterValidDDL" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Borrowing Rate Effective (%)</label>
                        @Html.TextBoxFor(o => o.BorrowingEffectivePercent, null, new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Borrowing Rate Effective (%)" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Spread Effective (%)</label>
                        @Html.TextBoxFor(o => o.SpreadEffectivePercent, null, new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Spread Effective (%)" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">

                    <div class="form-group">
                        <label>Prime Rate Effective (%)</label>
                        @Html.TextBoxFor(o => o.PrimeEffectivePercent, null, new { @class = "form-control percentOnly", @placeholder = "Prime Rate Effective", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Borrowing Rate Flat (%)</label>
                        @Html.TextBoxFor(o => o.BorrowingFlatPercent, null, new { @class = "form-control percentOnly", @placeholder = "Borrowing Rate Flat", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Prime Rate Flat (%)</label>
                        @Html.TextBoxFor(o => o.PrimeFlatPercent, null, new { @class = "form-control percentOnly", @placeholder = "Prime Rate Flat (%)", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Spread Flat (%)</label>
                        @Html.TextBoxFor(o => o.SpreadFlatPercent, null, new { @class = "form-control percentOnly", @placeholder = "Spread Rate Flat (%)", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Administration Fee</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.AdministrationFeeAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Administration Fee", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-2 col-md-2">
                    <div class="form-group">
                        <label>Term of Payment (Days)</label>
                        @Html.TextBoxFor(o => o.TermPaymentDays, null, new { @class = "form-control numbersOnly", @placeholder = "Term of Payments", @readonly = "true" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Product</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTProduct, null, new { @class = "form-control percentOnly disableAfterValid", @placeholder = "Down Payment of Product Before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.DPBeforeBASTProductAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Down Payment of Product Before BAST", @data_maxlength = "22" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Period to BAST (Month(s))</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTProduct, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "Time Number of Down Payment of Product to BAST (Month(s))" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement before BAST Include VAT IN</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.UnitSettlementIncVat, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Payment Settlement before BAST Include VAT IN", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Month)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTProduct, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "Payment Settlement Period to BAST (Month)" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Carroserie</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTCarroserie, null, new { @class = "form-control percentOnly disableAfterValid", @placeholder = "DP Before BAST", @data_maxlength = "22" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.DPBeforeBASTCarroserieAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Down Payment of Carroserie Before BAST", @data_maxlength = "22" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Period to BAST (Month(s))</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTCarroserie, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "DP Period to BAST (Month(s))" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement before BAST Include VAT IN</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.CarrSettlementIncVat, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Payment Settlement before BAST Include VAT IN", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Month)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTCarroserie, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "Payment Settlement Period to BAST (Month)" })
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Accesories</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST (%)</label>
                        @Html.TextBoxFor(o => o.DPBeforeBASTAccesories, null, new { @class = "form-control percentOnly disableAfterValid", @placeholder = "DP Before BAST (%)" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Before BAST</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.DPBeforeBASTAccesoriesAmount, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Down Payment of Accesories Before BAST", @data_maxlength = "22" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>DP Period to BAST (Month(s))</label>
                        @Html.TextBoxFor(o => o.DPPeriodBASTAccesories, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "DP Period to BAST (Month(s))" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement before BAST Include VAT IN</label>
                        <div class="input-group">
                            <span class="input-group-addon bg-info">Rp</span>
                            @Html.TextBoxFor(o => o.AccSettlementIncVat, "{0:N0}", new { @class = "form-control currenciesOnly disableAfterValid", @placeholder = "Payment Settlement before BAST Include VAT IN", @data_maxlength = "23" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3" hidden>
                    <div class="form-group">
                        <label>Payment Settlement Period to BAST (Month)</label>
                        @Html.TextBoxFor(o => o.PSPeriodBASTAccesories, null, new { @class = "form-control numbersOnly disableAfterValid", @placeholder = "Payment Settlement Period to BAST (Month)" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer bg-light lter">
            @if (remark < step)
            {
                <a href="@Url.RouteUrl("OPLCalculationCashflow", new { controller = "OPLCalculationCashflow", action = "Edit", step = "1", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                @Html.Hidden("IsRemarkBeforeStep", "1")
            }
            else
            {
                @Html.Hidden("IsRemarkBeforeStep", "0")

                <a href="@Url.RouteUrl("OPLCalculationCashflow", new { controller = "OPLCalculationCashflow", action = "Edit", step = "1", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-warning"><i class="fa fa-chevron-left"></i> Previous Step</a>
                if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.SuperUser || Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.Admin)
                {
                    if (Model.IsDraft || Model.IsSubmitted)
                    { //edited by Sonny (15 Feb 2018), untuk status tersebut, save change dibuka semua
                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                    }
                }
                if (Session["Role"].ToString() == Dsf.Lib.Constant.OlssRole.User)
                {
                    if (Model.IsDraft || Model.IsSubmitted)
                    {  //edited by Sonny (15 Feb 2018), untuk status tersebut, save change dibuka semua

                        <input type="submit" class="btn btn-info" value="Save Changes" name="step_2" />
                    }
                }
                if (Model.IsEditableAfterValid && !Model.IsDraft && !Model.IsSubmitted)
                {
                    <input type="submit" class="btn btn-info" value="Set to Draft" name="step_2" />
                }

                if (Model.IsEditableAfterValid && Model.IsDraft && Model.IsValid && !Model.IsSubmitted)
                {
                    <input type="submit" class="btn btn-info" value="Set to Valid" name="step_2" />
                }

                @Html.HiddenFor(o => o.IsValid)
                @Html.HiddenFor(o => o.IsSubmitted)
                @Html.HiddenFor(o => o.IsDraft)
                @Html.HiddenFor(o => o.IsEditableAfterValid) @* Added by Sonny (15 Feb 2018) untuk flag boleh edit setelah isvalud=true/approved*@
                <a href="@Url.RouteUrl("OPLCalculationCashflow", new { controller = "OPLCalculationCashflow", action = "Edit", step = "3", id = @Model.IdOPLCalculation })" type="submit" class="btn btn-primary">Next Step <i class="fa fa-chevron-right"></i></a>
            }

        </div>
    </section>

}
@section Scripts{
    <script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/bootbox/bootbox.min.js")"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var OPLCalculationCashflowHub = $.connection.OPLCalculationCashflow;
        var confirm = false;
        OPLCalculationCashflowHub.client.OnSaveLock = function(id, remarks) {
            if (id == '@Model.IdOPLCalculation' && remarks == '@Model.OPLRemarks' && !confirm) {
                confirm = true;
                bootbox.confirm("Data has been changes by other user, do you want to refresh the page?", function(result) {
                    if (result != false) {
                        location.href = location.href;
                    }
                    confirm = false;
                });
            }
        };

        OPLCalculationCashflowHub.client.OnStatusLock = function(id) {
            if (id == '@Model.IdOPLCalculation' && !confirm) {
                confirm = true;
                bootbox.alert("Status has been changes by other user, you will be redirected to list page ..", function() {
                    window.location.href = '@Url.Action("Index", "OPLCalculationCashflow")';
                });
            }
        };
        $.connection.hub.start().done(function() {
            var myClientId = $.connection.hub.id;
            $('#ConnId').val(myClientId);
        });

        function PreCalculateTotalAccCarrMob() {
            var accPrice = Number($('#AccesoriesPrice').val().replace(/,/g, ''));
            var accDiscount = Number($('#AccesoriesDiscount').val().replace(/,/g, ''));
            if (!isNaN(accPrice)) {
                var accfixdiscount = 0;
                if (!isNaN(accDiscount)) accfixdiscount = accDiscount;
                $('#AccesoriesPriceTotal').val(accPrice - accfixdiscount).formatCurrency().change();
            }

            var carrosPrice = Number($('#CarroserriePrice').val().replace(/,/g, ''));
            var carrosDiscount = Number($('#CarroserrieDiscount').val().replace(/,/g, ''));
            if (!isNaN(carrosPrice)) {
                var carrfixdiscount = 0;
                if (!isNaN(carrosDiscount)) carrfixdiscount = carrosDiscount;
                $('#CarroserriePriceTotal').val(carrosPrice - carrfixdiscount).formatCurrency().change();
            }
            CalculateTotalAccCarrMob();
        }

        function CalculateTotalAccCarrMob() {
            var accPriceTotal = Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
            var carrPriceTotal = Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
            var mobFee = Number($('#MobilizationFeeAmount').val().replace(/,/g, ''));
            if (isNaN(mobFee)||mobFee=='') {
                mobFee = 0;
            }
            var deMobFee = Number($('#DemobilizationFeeAmount').val().replace(/,/g, ''));
            if (isNaN(deMobFee)||deMobFee=='') {
                deMobFee = 0;
            }
            $('#TotalCaroserriePriceEtc').val(accPriceTotal + carrPriceTotal+mobFee+deMobFee).formatCurrency().change();

            //added by Sonny (15 Feb 2018), agar tidak error ketik NaN dan dapat disubmit
            if (isNaN($("#TotalCaroserriePriceEtc").val()))
            {
                $("#TotalCaroserriePriceEtc").val(0);
            }
        }

        function CalculatePrimeFlat() {
            var borrow = 0;
            var spread = 0;
            if (!isNaN($('#BorrowingFlatPercent').val()))
                borrow = Number($('#BorrowingFlatPercent').val());
            if (!isNaN($('#SpreadFlatPercent').val()))
                spread = Number($('#SpreadFlatPercent').val());
            $('#PrimeFlatPercent').val(spread + borrow);
        }

        function CalculatePrimeEffective() {
            var prime = 0;
            var borrow = 0;
            var spread = 0;
            if (!isNaN($('#BorrowingEffectivePercent').val()))
                borrow = Number($('#BorrowingEffectivePercent').val());
            if (!isNaN($('#SpreadEffectivePercent').val()))
                spread = Number($('#SpreadEffectivePercent').val());
            $('#PrimeEffectivePercent').val(spread + borrow).change();
        }

        var nper = @(Model.LeasePeriod.HasValue ? Model.LeasePeriod.Value : 0);
        var getUrl = '@Url.Action("CalculateRateFlat", "OPLCalculationCashflow")';
        var getUrlBorrowing = '@Url.Action("CalculateBorrowingRateFlat", "OPLCalculationCashflow")';
        var getUrlSpread = '@Url.Action("CalculateSpreadRateFlat", "OPLCalculationCashflow")';

        function CalculateBorrowingFlat(borrowingrate, paymenttype) {
            var pricenet = Number($('#ProductPriceTotal').val().replace(/,/g, ''));
            var accesoriesnet = Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
            var carroseriesnet = Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
            if (isNaN(pricenet))
                pricenet = 0;
            if (isNaN(accesoriesnet))
                accesoriesnet = 0;
            if (isNaN(carroseriesnet))
                carroseriesnet = 0;

            $.ajax({
                url: getUrlBorrowing,
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ borrowingrate: borrowingrate, nper: nper, paymenttype: paymenttype, pricenet: pricenet, accesoriesnet: accesoriesnet, carroseriesnet: carroseriesnet }),
                async: true,
                processData: false,
                cache: false,
                success: function(data) {
                    $('#BorrowingFlatPercent').val(data);
                    CalculatePrimeFlat();
                },
                error: function(xhr) {
                    alert('Error on calculate');
                }
            });
        };

        function CalculateSpreadFlat(borrowingrate, primerate, paymenttype) {
            var pricenet = Number($('#ProductPriceTotal').val().replace(/,/g, ''));
            var accesoriesnet = Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
            var carroseriesnet = Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
            if (isNaN(pricenet))
                pricenet = 0;
            if (isNaN(accesoriesnet))
                accesoriesnet = 0;
            if (isNaN(carroseriesnet))
                carroseriesnet = 0;

            $.ajax({
                url: getUrlSpread,
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ borrowingrate: borrowingrate, primerate: primerate, nper: nper, paymenttype: paymenttype, pricenet: pricenet, accesoriesnet: accesoriesnet, carroseriesnet: carroseriesnet }),
                async: true,
                processData: false,
                cache: false,
                success: function(data) {
                    $('#SpreadFlatPercent').val(data);
                    CalculatePrimeFlat();
                },
                error: function(xhr) {
                    alert('Error on calculate');
                }
            });
        }



        var productPrice = 0;
        var productPriceGross = 0;
        var productPriceForRV = 0;
        var productPriceGrossForRV = 0;
        CalculateProductPrice();
        CalculateProductPriceGross();

        function CalculateProductPrice() {
            var productprice = Number($('#ProductPrice').val().replace(/,/g, ''));
            var productpricetotal = Number($('#ProductPriceTotal').val().replace(/,/g, ''));
            var accesoriespricetotal = Number($('#AccesoriesPriceTotal').val().replace(/,/g, ''));
            var carroserriepricetotal = Number($('#CarroserriePriceTotal').val().replace(/,/g, ''));
            if (isNaN(productpricetotal))
                productpricetotal = 0;
            if (isNaN(accesoriespricetotal))
                accesoriespricetotal = 0;
            if (isNaN(carroserriepricetotal))
                carroserriepricetotal = 0;

            productPrice = productpricetotal + accesoriespricetotal + carroserriepricetotal;
            productPriceForRV = productprice + carroserriepricetotal;
        };


        function CalculateProductPriceGross() {
            var productpricegross = Number($('#ProductPrice').val().replace(/,/g, ''));
            var accesoriespricegross = Number($('#AccesoriesPrice').val().replace(/,/g, ''));
            var carroserriepricegross = Number($('#CarroserriePrice').val().replace(/,/g, ''));
            if (isNaN(productpricegross))
                productpricegross = 0;
            if (isNaN(carroserriepricegross))
                accesoriespricegross = 0;
            if (isNaN(carroserriepricegross))
                carroserriepricegross = 0;

            productPriceGross = productpricegross + accesoriespricegross + carroserriepricegross;
            productPriceGrossForRV = productpricegross + carroserriepricegross;
        };

        $(document).ready(function() {
            PreCalculateTotalAccCarrMob();

            var periodinyear = @Model.PeriodInYears;

            //Added by Sonny (15 Feb 2018) untuk enability control berdasarkan status, tidak hanya remark before step, tetapi juga editableaftervalid
            //alert("Remark before step: " + $("#IsRemarkBeforeStep").val());
            if ($("#IsRemarkBeforeStep").val() == "0")
            {
                //alert("Valid: " + $("#IsValid").val());
                //alert("IsSubmitted: " + $("#IsSubmitted").val());
                //alert("IsDraft: " + $("#IsDraft").val());
                //alert("IsEditableAfterValid: " + $("#IsEditableAfterValid").val());

                if ($("#IsSubmitted").val() == "True" || $("#IsDraft").val() == "True")
                {
                    //enable semua control
                }
                else
                {
                    //alert("Disable semua control kecuali control tertentu");
                    $('.disableAfterValid').prop('readonly', true);
                    $('.disableAfterValidDDL').prop("disabled", true);

                    if ($("#IsEditableAfterValid").val() == "True")
                    {
                        //Tombol Set To Draft visible
                    }
                }
                //End Added by Sonny (15 Feb 2018) untuk enability control berdasarkan status, tidak hanya remark before step, tetapi juga editableaftervalid




            }

            //$('#RegistrationValueRate').change(function() {
            //    var registrationValueRate = $('#RegistrationValueRate').val();
            //    if (registrationValueRate == 0) {
            //        $('#RegistrationValueAmount').val('0');
            //    } else {
            //        var registrationValueAmount = registrationValueRate / 100 * productPrice * nper;
            //        $('#RegistrationValueAmount').val(registrationValueAmount).formatCurrency();
            //    }
            //});

            $('#StnkFee').change(function() {
                var stnkFeeValueAmount = Number($('#StnkFee').val().replace(/,/g, ''));
                var keurFeeValueAmount = Number($('#KeurFee').val().replace(/,/g, ''));
                if (isNaN(stnkFeeValueAmount)) {
                    keurFeeValueAmount = 0;
                }
                if (isNaN(stnkFeeValueAmount)) {
                    keurFeeValueAmount = 0;
                }
                var registrationValueAmount = stnkFeeValueAmount + keurFeeValueAmount;
                $('#RegistrationValueAmount').val(registrationValueAmount).formatCurrency();
            });

            $('#KeurFee').change(function() {
                var stnkFeeValueAmount = Number($('#StnkFee').val().replace(/,/g, ''));
                var keurFeeValueAmount = Number($('#KeurFee').val().replace(/,/g, ''));
                if (isNaN(stnkFeeValueAmount)) {
                    keurFeeValueAmount = 0;
                }
                if (isNaN(stnkFeeValueAmount)) {
                    keurFeeValueAmount = 0;
                }
                var registrationValueAmount = stnkFeeValueAmount + keurFeeValueAmount;
                $('#RegistrationValueAmount').val(registrationValueAmount).formatCurrency();
            });

            $('#ProductPriceTotal').change(function() {
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });
            $('#AccesoriesPriceTotal').change(function() {
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });

            $('#CarroserriePriceTotal').change(function() {
                CalculateProductPrice();
                CalculateProductPriceGross();
                $('#ResidualValueAmount').change();
                $('#SResidualValuePercent').change();
                $('#RegistrationValueRate').change();
                $('#BorrowingEffectivePercent').change();
                $('#SpreadEffectivePercent').change();
                $('#PrimeEffectivePercent').change();
            });

            $('#ResidualValuePercent').change(function() {
                var percent = Number($(this).val());

                var productpriceRV = Number($('#ProductPrice').val().replace(/,/g, '')) +
                    Number($('#CarroserriePrice').val().replace(/,/g, ''));
                if (!isNaN(percent)) $('#ResidualValueAmount').val(productpriceRV * percent / 100).formatCurrency();
            });


            $('#ResidualValueAmount').change(function() {
                var amt = Number($(this).val().replace(/,/g, ''));
                var productpriceRV = Number($('#ProductPrice').val().replace(/,/g, '')) +
                    Number($('#CarroserriePrice').val().replace(/,/g, ''));
                if (!isNaN(amt)) $('#ResidualValuePercent').val((amt * 100 / productpriceRV).toFixed(6));
            });

            $('#DPBeforeBASTProduct').change(function() {
                var percent = Number($(this).val());
                var amount = Number($('#ProductPriceTotal').val().replace(/,/g, '')) * percent / 100;
                if (!isNaN(percent)) $('#DPBeforeBASTProductAmount').val(amount).formatCurrency();
            });

            $('#DPBeforeBASTProductAmount').change(function() {
                var amount = Number($(this).val().replace(/,/g, ''));
                var percent = amount / Number($('#ProductPriceTotal').val().replace(/,/g, '')) * 100;
                if (!isNaN(amount)) $('#DPBeforeBASTProduct').val((percent).toFixed(6));
            });

            $('#DPBeforeBASTCarroserie').change(function() {
                var percent = Number($(this).val());
                var amount = Number($('#CarroserriePriceTotal').val().replace(/,/g, '')) * percent / 100;
                if (!isNaN(percent)) $('#DPBeforeBASTCarroserieAmount').val(amount).formatCurrency();
            });
            $('#DPBeforeBASTCarroserieAmount').change(function() {
                var amount = Number($(this).val().replace(/,/g, ''));
                var percent = amount / Number($('#CarroserriePriceTotal').val().replace(/,/g, '')) * 100;
                if (!isNaN(amount)) $('#DPBeforeBASTCarroserie').val((percent).toFixed(6));

                //if ($('DPBeforeBASTCarroserie').val() > 0){
                //    $("#DPPeriodBASTCarroserie").addClass('required');
                //}else{
                //    $("#DPPeriodBASTCarroserie").removeClass('required');
                //}
            });

            $('#DPBeforeBASTAccesories').change(function() {
                var percent = Number($(this).val());
                var amount = Number($('#AccesoriesPriceTotal').val().replace(/,/g, '')) * percent / 100;
                if (!isNaN(percent)) $('#DPBeforeBASTAccesoriesAmount').val(amount).formatCurrency();

                //if ($('DPBeforeBASTAccesories').val() > 0){
                //    $("#DPPeriodBASTAccesories").addClass('required');
                //}else{
                //    $("#DPPeriodBASTAccesories").removeClass('required');
                //}
            });

            $('#DPBeforeBASTAccesoriesAmount').change(function() {
                var amount = Number($(this).val().replace(/,/g, ''));
                var percent = amount / Number($('#AccesoriesPriceTotal').val().replace(/,/g, '')) * 100;
                if (!isNaN(amount)) $('#DPBeforeBASTAccesories').val((percent).toFixed(6));

                //if ($('DPBeforeBASTAccesories').val() > 0){
                //    $("#DPPeriodBASTAccesories").addClass('required');
                //}else{
                //    $("#DPPeriodBASTAccesories").removeClass('required');
                //}
            });

            $('#SResidualValuePercent').change(function() {
                var percent = Number($(this).val());
                if (!isNaN(percent)) $('#SResidualValueAmount').val(productPriceGrossForRV * percent / 100).formatCurrency();
                $('#SResidualValueAmount').change();
            });

            $('#SResidualValueAmount').change(function() {
                var amt = Number($(this).val().replace(/,/g, ''));
                if (!isNaN(amt)) $('#SResidualValuePercent').val((amt * 100 / productPriceGrossForRV).toFixed(6));
            });

            $('#BorrowingEffectivePercent').change(function() {
                var borrowingrate = Number($(this).val().replace(/,/g, ''));
                if (isNaN(borrowingrate))
                    borrowingrate = 0;
                var paymenttype = $('option:selected', $('select#PaymentType')).text();
                CalculatePrimeEffective();
                CalculateBorrowingFlat(borrowingrate, paymenttype);
                //CalculatePrimeFlat();
            });

            $(".sixdecimal").change(function(){
                var amt = Number($(this).val().replace(/,/g, ''));
                if (!isNaN(amt)) $(this).val((amt).toFixed(6));
            });

            $('#SpreadEffectivePercent').change(function() {
                CalculatePrimeEffective();
                var borrowingrate = Number($('#BorrowingEffectivePercent').val().replace(/,/g, ''));
                var primerate = Number($('#PrimeEffectivePercent').val().replace(/,/g, ''));
                if (isNaN(borrowingrate))
                    borrowingrate = 0;
                if (isNaN(primerate))
                    primerate = 0;
                var paymenttype = $('option:selected', $('select#PaymentType')).text();
                CalculateSpreadFlat(borrowingrate, primerate, paymenttype);
                //CalculatePrimeFlat();
            });
            //$('#PrimeEffectivePercent').change(function () {
            //    var rate = $(this).val() ;
            //    var paymenttype = $('option:selected', $('select#PaymentType')).text();
            //    CalculatePrimeFlat();
            //});
            $('select#PaymentType').change(function() {
                var paymenttype = $('option:selected', $(this)).text();
                var rate1 = $('#BorrowingEffectivePercent').val();
                var rate2 = $('#SpreadEffectivePercent').val();
                var rate3 = $('#PrimeEffectivePercent').val();
                if (rate1) {
                    CalculateBorrowingFlat(rate1, paymenttype);
                }
                if (rate2) {
                    CalculateSpreadFlat(rate1, rate2, paymenttype);
                }
                if (rate3) {
                    CalculatePrimeFlat();
                }
            });

            $('#ProductPrice').change(function() {
                CalculateProductPriceGross();
                var dealerDiscount = Number($('#ProductDiscount').val().replace(/,/g, ''));
                var productPrice = Number($(this).val().replace(/,/g, ''));
                if (!isNaN(productPrice)) {
                    var totalDiscount = 0;
                    if (!isNaN(dealerDiscount)) totalDiscount += dealerDiscount;
                    $('#ProductPriceTotal').val(productPrice - totalDiscount).formatCurrency().change();
                }
            }).formatCurrency();

            $('.prod_discount').change(function() {
                var productPrice = Number($('#ProductPrice').val().replace(/,/g, ''));
                if (!isNaN(productPrice)) {
                    var totalDiscount = 0;
                    var dealerDiscount = Number($('#ProductDiscount').val().replace(/,/g, ''));
                    if (!isNaN(dealerDiscount)) totalDiscount += dealerDiscount;
                    $('#ProductPriceTotal').val(productPrice - totalDiscount).formatCurrency().change();
                }
            }).formatCurrency();

            $('#ATPMDiscount').change(function() {
                var atpmDiscount = Number($('#ATPMDiscount').val().replace(/,/g, ''));
                if (!isNaN(atpmDiscount)) {
                    var vatOutDiscKtb = Math.ceil(atpmDiscount * (10 / 100));
                    var whTaxDiscount = Math.ceil(atpmDiscount * (15 / 100));
                    $('#VatOutDiscKtb').val(vatOutDiscKtb).formatCurrency().change();
                    $('#WhTaxDiscKtb').val(whTaxDiscount).formatCurrency().change();
                }
            }).formatCurrency();

            $('#ResidualValueAmount').change(function() {
                var residualValue = Number($('#ResidualValueAmount').val().replace(/,/g, ''));
                if (!isNaN(residualValue)) {
                    var vatOutSoldUnit = Math.ceil(residualValue / (11));
                    $('#VatOutSoldUnit').val(vatOutSoldUnit).formatCurrency().change();

                }
            }).formatCurrency();

            $('#ResidualValuePercent').change(function() {
                var residualValue = Number($('#ResidualValueAmount').val().replace(/,/g, ''));
                if (!isNaN(residualValue)) {
                    var vatOutSoldUnit = Math.ceil(residualValue / (11));
                    $('#VatOutSoldUnit').val(vatOutSoldUnit).formatCurrency().change();

                }
            }).formatCurrency();

            $('#AccesoriesPrice').change(function() {
                PreCalculateTotalAccCarrMob();
            });

            $('#CarroserriePrice').change(function() {
                PreCalculateTotalAccCarrMob();
            });
            $('#AccesoriesDiscount').change(function() {
                PreCalculateTotalAccCarrMob();
            });

            $('#CarroserrieDiscount').change(function() {
                PreCalculateTotalAccCarrMob();
            });

            $('#MobilizationFeeAmount').change(function() {
                PreCalculateTotalAccCarrMob();
            });

            $('#DemobilizationFeeAmount').change(function() {
                PreCalculateTotalAccCarrMob();
            });

            $(".currenciesOnly").on('keydown', currenciesOnly)
                .on('blur', function() { $(this).formatCurrency(); });
            $(".numbersOnly").on('keydown', numbersOnly);
            $(".decimalsOnly").on('keydown', decimalsOnly);
            $(".percentOnly").on('keydown', percentOnly);

            if ($("#dsf").prop('checked')) {
                $("#StnkFee").attr("disabled", false);
                $("#KeurFee").attr("disabled", false);
            }

            if ($("#lessee").prop('checked')) {
                $("#StnkFee").attr("disabled", true);
                $("#KeurFee").attr("disabled", true);
            }

            if ($("#DPBeforeBASTProduct").val() == "") { $("#DPBeforeBASTProduct").val(0); }
            if ($("#DPBeforeBASTCarroserie").val() == "") { $("#DPBeforeBASTCarroserie").val(0); }
            if ($("#DPBeforeBASTAccesories").val() == "") { $("#DPBeforeBASTAccesories").val(0); }
            if ($("#DPBeforeBASTProductAmount").val() == "") { $("#DPBeforeBASTProductAmount").val(0); }
            if ($("#DPBeforeBASTCarroserieAmount").val() == "") { $("#DPBeforeBASTCarroserieAmount").val(0); }
            if ($("#DPBeforeBASTAccesoriesAmount").val() == "") { $("#DPBeforeBASTAccesoriesAmount").val(0); }
        });

        $('#lessee').change(function () {
            $("#StnkFee").parsley('destroy');
            $("#KeurFee").parsley('destroy');
            $("#StnkFee").removeClass('required');
            $("#KeurFee").removeClass('required');
            $("#StnkFee").attr("disabled", true).val('');
            $("#KeurFee").attr("disabled", true).val('');
            $("#RegistrationValueAmount").val('');
        });

        $('#dsf').change(function () {
            $("#StnkFee").attr("disabled", false);
            $("#KeurFee").attr("disabled", false);
        });

        $('input[type="submit"]').on('click', function (e) {
            if ($("#dsf").prop('checked')) {
                $("#StnkFee").parsley('destroy');
                $("#KeurFee").parsley('destroy');
                $("#StnkFee").addClass('required');
                $("#KeurFee").addClass('required');
                $("#StnkFee").parsley('validate');
                $("#KeurFee").parsley('validate');
                if ($("#StnkFee").val() == '' || $("#KeurFee").val() == '') event.preventDefault();
            } else {
                $("#StnkFee").removeClass('required');
                $("#KeurFee").removeClass('required');
                $("#StnkFee").parsley('destroy');
                $("#KeurFee").parsley('destroy');
            }


            if ($("#DPBeforeBASTProduct").val() > 0){
                $("#DPPeriodBASTProduct").parsley('destroy');
                $("#DPPeriodBASTProduct").addClass('required');
                $("#DPPeriodBASTProduct").parsley('validate');
                if ($("#DPPeriodBASTProduct").val() == '') event.preventDefault();
            }else{
                $("#DPPeriodBASTProduct").removeClass('required');
                $("#DPPeriodBASTProduct").parsley('destroy');
            }

            if ($("#DPBeforeBASTCarroserie").val() > 0){
                $("#DPPeriodBASTCarroserie").parsley('destroy');
                $("#DPPeriodBASTCarroserie").addClass('required');
                $("#DPPeriodBASTCarroserie").parsley('validate');
                if ($("#DPPeriodBASTCarroserie").val() == '') event.preventDefault();
            }else{
                $("#DPPeriodBASTProduct").removeClass('required');
                $("#DPPeriodBASTCarroserie").parsley('destroy');
            }

            if ($("#DPBeforeBASTAccesories").val() > 0){
                $("#DPPeriodBASTAccesories").parsley('destroy');
                $("#DPPeriodBASTAccesories").addClass('required');
                $("#DPPeriodBASTAccesories").parsley('validate');
                if ($("#DPPeriodBASTAccesories").val() == '') event.preventDefault();
            }else{
                $("#DPPeriodBASTProduct").removeClass('required');
                $("#DPPeriodBASTAccesories").parsley('destroy');
            }
        });

        $('.percentOnly').focusout(function () {
            if ($(this).val() == "") { $(this).val(0); }
        });
    </script>

    <script src="@Url.Content("~/Content/ui-framework/js/currencyformat/jquery.formatCurrency-1.4.0.js")"></script>
}
