@using System.Web.UI.WebControls
@using Dsf.Lib.Constant
@model Dsf.Olss.Models.BILInvoiceViewModel
@{
    ViewBag.Title = "Detail Invoice";
    var localeDateFormat = System.Threading.Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern;
    var idPaySchDtl = ViewBag.IdPaySchedulDtl;
}
@section Styles{
    <link href=@Url.Content("~/Content/ui-framework/css/style.css") rel="stylesheet" />
}

<a href="@Url.Action("ListInvoiceStatusApproval", "BILCreation", new { id = idPaySchDtl })" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
<br><br>

@using (Html.BeginForm("DetailInvoiceApprovals", "BILCreation", FormMethod.Post))
{
        <section class="panel">
            @Html.HiddenFor(o => o.IdTb_BIL_PayScheduleDtl)
            @Html.HiddenFor(o => o.IdTb_BIL_PaySchedule)
            @Html.HiddenFor(o => o.IdOPLAgreement)
            <header class="panel-heading font-bold">Invoice Receipt Data</header>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Number Period</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.NumberPeriod, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Due Date ( Usage Period + T.O.P )</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.DueDate, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Usage Period</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.UsagePeriod, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Customer Group</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.CustomerGroup, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Agreement No.</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.AgreementNumber, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Customer Name</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.CustomerName, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label id="label">Customer NPWP</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.CustomerNPWP, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label id="label">Customer Address</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextAreaFor(o => o.CustomerAddress, new { @class = "form-control", @readonly = "readonly", @rows = "4", @cols = "50" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>Invoice Receiver Name</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.InvoiceReceiverName, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label id="label">Invoice Receiver Email</label>
                            </div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.InvoiceReceiverEmail, null, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </section>
        <section class="panel">
            <header class="panel-heading font-bold">Installment</header>
            <table class="table table-striped table-input m-b-none text-sm">
                <thead>
                    <tr>
                        <th class="text-center">Number</th>
                        <th class="text-center">Installment Amount</th>
                        <th class="text-center">Breakdown Amount</th>
                        <th class="text-center">Installment + Breakdown</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model.InvoiceInstallments.Count > 0)
                    {
                        var counter = 1;

                        for (int i = 0; i < Model.InvoiceInstallments.Count; i++)
                        {
                            <tr>
                                <td>
                                    <p class="form-control-static text-right">@(i+1)</p>
                                </td>
                                <td>
                                    @Html.HiddenFor(o => o.InvoiceInstallments[i].InstallmentAmount)
                                    <p class="form-control-static text-right">@String.Format("{0:0,0;0,0;0}", Model.InvoiceInstallments[i].InstallmentAmount)</p>
                                </td>
                                <td class="text-left">
                                    @Html.HiddenFor(o => o.InvoiceInstallments[i].BreakdownAmount)
                                    <p class="form-control-static text-right">@String.Format("{0:0,0;0,0;0}", Model.InvoiceInstallments[i].BreakdownAmount)</p>
                                </td>
                                <td class="text-left">
                                    @Html.HiddenFor(o => o.InvoiceInstallments[i].TotalInstallmentBreakdown)
                                    <p class="form-control-static text-right">@String.Format("{0:0,0;0,0;0}", Model.InvoiceInstallments[i].TotalInstallmentBreakdown)</p>
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </section>
        <section class="panel">
            <header class="panel-heading font-bold">Billing Maintenance</header>
            <table class="table table-striped table-input m-b-none text-sm">
                <thead>
                    <tr>
                        <th class="text-center">Number</th>
                        <th class="text-center">Police Number</th>
                        <th class="text-center">Object Type</th>
                        <th class="text-center">Description</th>
                        <th class="text-center">Maintenance Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.InvoiceBillingMaintenances != null && Model.InvoiceBillingMaintenances.Count > 0)
                    {
                        for (int i = 0; i < Model.InvoiceBillingMaintenances.Count; i++)
                        {
                            <tr>
                                <td>
                                    <p class="form-control-static text-right">
                                        @(i+1)
                                        @Html.HiddenFor(o => o.InvoiceBillingMaintenances[i].IDHistoryMT)
                                    </p>
                                </td>
                                <td>
                                    <p class="form-control-static text-left">
                                        @Html.HiddenFor(o => o.InvoiceBillingMaintenances[i].PoliceNumber)
                                        @Model.InvoiceBillingMaintenances[i].PoliceNumber
                                    </p>
                                </td>
                                <td>
                                    <p class="form-control-static text-left">
                                        @Html.HiddenFor(o => o.InvoiceBillingMaintenances[i].ObjectType)
                                        @Model.InvoiceBillingMaintenances[i].ObjectType
                                    </p>
                                </td>
                                <td>
                                    <p class="form-control-static text-left">
                                        @Html.HiddenFor(o => o.InvoiceBillingMaintenances[i].MaintenanceCategoryName)
                                        @Model.InvoiceBillingMaintenances[i].MaintenanceCategoryName
                                    </p>
                                </td>
                                <td>
                                    <p class="form-control-static text-right">
                                        @Html.HiddenFor(o => o.InvoiceBillingMaintenances[i].MTActualCost)
                                        @String.Format("{0:0,0;0,0;0}", Model.InvoiceBillingMaintenances[i].MTActualCost)
                                    </p>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">
                                <p class="form-control-static text-left">No Data</p>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </section>
        <section class="panel">
            <header class="panel-heading font-bold">Remarks</header>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <div class="col-lg-12">
                                @Html.TextAreaFor(o => o.Remarks, new { @class = "form-control mandatory", @rows = "3" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    if (ViewBag.IsPassed == true)
        {
        <section class="panel">
            <footer class="panel-footer bg-light lter">
                @Html.HiddenFor(x => x.IdTb_BIL_InvoiceReceipt)

                @if (ViewBag.ApprovalLevelCode == StatusCode.Approve)
                {
                    <input type="hidden" id="submitButtonText" />
                    @StateButton.InvoiceReceiptStateButton("approve")
                }
                else if (ViewBag.ApprovalLevelCode == StatusCode.Check)
                {
                    if ((ViewBag.JobTitles == JobTitles.MO || ViewBag.JobTitles == JobTitles.MOOPL) && string.Equals(ViewBag.CreatorSkd, Dsf.Olss.Common.SimpleSessionPersister.Username, StringComparison.CurrentCultureIgnoreCase))
                    {
                        <input type="hidden" id="submitButtonText" />
                        @StateButton.InvoiceReceiptStateButton("check")
                    }
                    else if (ViewBag.JobTitles != JobTitles.MO && ViewBag.JobTitles != JobTitles.MOOPL)
                    {
                        <input type="hidden" id="submitButtonText" />
                        @StateButton.InvoiceReceiptStateButton("check")
                    }
                }
            </footer>
        </section>
        }
}

@{Html.RenderPartial("ModalPopUpInvoice");}

<script src="@Url.Content("~/Content/js/BillCreation.js")"></script>
<script>
    $(document).ready(function () {
        //change type submit to button to provide modal popup
        $('input[name="statusButton"]').attr('type', 'button').attr('data-toggle', 'modal').attr('data-target', '#approvalConfirmationModal');

        if (@(Html.Raw(Json.Encode(ViewBag.IsPassed))) !== true) {

            $('#Remarks').prop('readonly', true);
        }
    });

    $('#confirmBtn').click(function (e) {
        var submitvalue = $('#submitButtonText').val();
        $('form:first').addHidden('statusButton', submitvalue).trigger('submit');
        $(this).prop('disabled', true);
    });

    //Field Remarks Validation
    $('input[name="statusButton"]').on('click', function (e) {
        // This must be applied to a form (or an object inside a form).
        jQuery.fn.addHidden = function (name, value) {
            return this.each(function () {
                var input = $("<input>").attr("type", "hidden").attr("name", name).val(value);
                $(this).append($(input));
            });
        };

        var submitvalue = $(this).val();
        var msg = '';
        if (submitvalue === 'Revise') {
            msg = 'Revise';
        } else if (submitvalue === 'Reject') {
            msg = 'Reject';
        } else if (submitvalue === 'Check') {
            msg = 'Check';
        } else if (submitvalue === 'Approve') {
            msg = 'Approve';
        }

        $('.msgModal').text(msg);
        $('#submitButtonText').val(submitvalue);

        if ($(this).val() == "Revise" || $(this).val() == "Reject") {
            if (!ValidationRemarks()) {
                e.preventDefault();
                goToTop();
                return false;
            }
        }
        return true;
    });
</script>