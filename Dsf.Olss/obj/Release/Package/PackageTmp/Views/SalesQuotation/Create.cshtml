@model Dsf.Olss.Models.SalesQuotationViewModel
@{
    ViewBag.Title = "Create Refinance Quotation";
}

@section Styles{
    <link rel="stylesheet" href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") type="text/css" />
}

<a href="@Url.Action("Index", "SalesQuotation")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a>
<hr>

@using (Html.BeginForm("Create", "SalesQuotation", FormMethod.Post, new { @data_validate = "parsley" }))
{
    @Html.TextBoxFor(o => o.ConnId, null, new { @type = "hidden" })
    @Html.HiddenFor(o => o.ExactSalesAmount)
    <section class="panel">
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Refinance Quotation Number</label>
                        @Html.TextBox("COSQuotationNumber", null, new { @class = "form-control", @readonly = "readonly", @placeholder = "Refinance Quotation Number" })
                        @Html.ValidationMessageFor(o => o.COSQuotationNumber)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Refinance Calc. Number</label>
                        <div class="input-group">
                            @*@Html.HiddenFor(o => o.COSNumber)*@
                            @Html.TextBox("COSNumber", null, new { @class = "form-control", @placeholder = "Refinance Calc. Number", @readonly = "readonly", @data_maxlength = "25", @parsley_error_container = "input-group" })
                            <span class="input-group-btn">
                                <button tabindex="1" id="btnLoadCalculation" class="btn btn-white" data-toggle="modal" data-target="#calculationModal" type="button" onclick="LoadProductCategory()">...</button>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(o => o.COSNumber)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Customer Name / Buyer</label>
                        @Html.TextBoxFor(o => o.CustomerName, null, new { @class = "form-control", @readonly = "readonly", @placeholder = "Customer Name / Buyer", @data_maxlength = "200", @data_required = "true" })
                        @Html.ValidationMessageFor(o => o.CustomerName)
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Product Basic Information</header>
        <div class="panel-body">

            <div class="row">
                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label>Product Registration Code</label>
                        @Html.TextBox("ProductCode", null, new { @class = "form-control", @readonly = "readonly", @data_maxlength = "50", @placeholder = "Product Registration Code", @parsley_error_container = "input-group" })
                        @Html.ValidationMessageFor(o => o.ProductCode)
                    </div>
                    <div class="form-group">
                        <label>Product Brand Code</label>
                        @Html.TextBoxFor(o => o.BrandCode, null, new { @class = "form-control", @data_maxlength = "10", @readonly = "readonly", @placeholder = "Product Brand Code" })
                        @Html.ValidationMessageFor(o => o.BrandCode)
                    </div>
                    <div class="form-group">
                        <label>Product Model Name</label>
                        @Html.TextBoxFor(o => o.ModelName, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Product Model Name" })
                        @Html.ValidationMessageFor(o => o.ModelName)
                    </div>
                    <div class="form-group">
                        <label>Transmission</label>
                        @Html.TextBoxFor(o => o.Transmission, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Transmission" })
                        @Html.ValidationMessageFor(o => o.Transmission)
                    </div>
                </div>

                <div class="col-lg-4 col-md-4">

                    <div class="form-group">
                        <label>Product Type</label>
                        @Html.TextBoxFor(o => o.ProductType, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Product Type" })
                        @Html.ValidationMessageFor(o => o.ProductType)
                    </div>

                    <div class="form-group">
                        <label>Product Brand Name</label>
                        @Html.TextBoxFor(o => o.BrandName, null, new { @class = "form-control", @data_maxlength = "200", @readonly = "readonly", @placeholder = "Product Brand Name" })
                        @Html.ValidationMessageFor(o => o.BrandName)
                    </div>
                    <div class="form-group">
                        <label>Product Model Type</label>
                        @Html.TextBoxFor(o => o.ModelType, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Product Model Type" })
                        @Html.ValidationMessageFor(o => o.ModelType)
                    </div>
                    <div class="form-group">
                        <label>Fuel Type</label>
                        @Html.TextBoxFor(o => o.FuelType, null, new { @class = "form-control", @data_maxlength = "200", @readonly = "readonly", @placeholder = "Fuel Type" })
                        @Html.ValidationMessageFor(o => o.FuelType)
                    </div>
                </div>

                <div class="col-lg-4 col-md-4">

                    <div class="form-group">
                        <label>Product Category</label>
                        @Html.TextBoxFor(o => o.ProductCategory1, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Product Category" })
                        @Html.ValidationMessageFor(o => o.ProductCategory1)
                    </div>

                    <div class="form-group">
                        <label>Product Model Code</label>
                        @Html.TextBoxFor(o => o.ModelCode, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Product Model Code" })
                        @Html.ValidationMessageFor(o => o.ModelCode)
                    </div>
                    <div class="form-group">
                        <label>Product Model Year (yyyy/mm)</label>
                        @Html.TextBoxFor(o => o.ModelYear, "{0:yyyy/MM}", new { @class = "form-control", @readonly = "readonly", @placeholder = "Product Model Year (yyyy/mm)", @data_required = "true" })
                        @Html.ValidationMessageFor(o => o.ModelYear)
                    </div>
                    <div class="form-group">
                        <label>Displacement (CC)</label>
                        @Html.TextBoxFor(o => o.DisPlacement, null, new { @class = "form-control text-right", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Displacement (CC)" })
                        @Html.ValidationMessageFor(o => o.DisPlacement)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Maximum Loading Capacity</label>
                        @Html.TextBoxFor(o => o.MaxLoadingCapacity, null, new { @class = "form-control text-right", @data_maxlength = "50", @readonly = "readonly", @placeholder = "Maximum Loading Capacity" })
                        @Html.ValidationMessageFor(o => o.MaxLoadingCapacity)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Riding Capacity</label>
                        @Html.TextBoxFor(o => o.RidingCapacity, null, new { @class = "form-control text-right", @data_maxlength = "32", @readonly = "readonly", @placeholder = "Riding Capacity" })
                        @Html.ValidationMessageFor(o => o.RidingCapacity)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Number Plat Color</label>
                        @Html.TextBoxFor(o => o.NumberPlatColor, null, new { @class = "form-control", @data_maxlength = "100", @readonly = "readonly", @placeholder = "Number Plat Color" })
                        @Html.ValidationMessageFor(o => o.NumberPlatColor)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Registration Date (mm/dd/yyyy)</label>
                        @Html.TextBoxFor(o => o.RegistrationDate, "{0:MM/dd/yyyy}", new { @class = "form-control", @readonly = "readonly", @placeholder = "Registration Date (mm/dd/yyyy)", data_date_format = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(o => o.RegistrationDate)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Usage</label>
                        @Html.TextBoxFor(o => o.Usage, null, new { @class = "form-control", @readonly = "readonly", @data_maxlength = "100", @placeholder = "Usage" })
                        @Html.ValidationMessageFor(o => o.Usage)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Location</label>
                        @Html.TextBoxFor(o => o.Location, null, new { @class = "form-control", @readonly = "readonly", @data_maxlength = "100", @placeholder = "Location" })
                        @Html.ValidationMessageFor(o => o.Location)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Engine Number</label>
                        @Html.TextBoxFor(o => o.EngineNumber, null, new { @class = "form-control", @readonly = "readonly", @data_maxlength = "100", @placeholder = "Engine Number" })
                        @Html.ValidationMessageFor(o => o.EngineNumber)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Police Number</label>
                        @Html.TextBoxFor(o => o.PoliceNumber, null, new { @class = "form-control", @readonly = "readonly", @data_maxlength = "100", @placeholder = "Police Number" })
                        @Html.ValidationMessageFor(o => o.PoliceNumber)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Special Options</label>
                        @Html.TextBoxFor(o => o.SpecialOptions, null, new { @class = "form-control", @data_maxlength = "200", @readonly = "readonly", @placeholder = "Special Options" })
                        @Html.ValidationMessageFor(o => o.SpecialOptions)
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading">Quotation Information</header>
        <div class="panel-body">

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>COR Proposal Number</label>
                        @Html.TextBoxFor(o => o.COSProposalNumber, null, new { @class = "form-control", @data_required = "true", @data_maxlength = "50", @placeholder = "COR Proposal Number", @tabindex = "2" })
                        @Html.ValidationMessageFor(o => o.COSProposalNumber)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>COR Quotation Date (mm/dd/yyyy)</label>
                        <div class="input-group">
                            @Html.TextBoxFor(o => o.COSQuotationDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker-input", @readonly = "readonly", @placeholder = "COR Quotation Date (mm/dd/yyyy)", @tabindex = "3" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(o => o.COSQuotationDate)
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Valid Until (mm/dd/yyyy)</label>
                        <div class="input-group">
                            @Html.TextBoxFor(o => o.Validuntil, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker-input", @readonly = "readonly", @placeholder = "Valid Until (mm/dd/yyyy)", @tabindex = "4" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(o => o.Validuntil)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Validity Days</label>
                        @Html.TextBoxFor(o => o.ValidityMonth, null, new { @class = "form-control", @readonly = "readonly", @placeholder = "Validity Month", @data_required = "true" })
                        @Html.ValidationMessageFor(o => o.ValidityMonth)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Terms</label>
                        @Html.TextBoxFor(o => o.Terms, null, new { @class = "form-control", @data_maxlength = "100", @placeholder = "Terms", @data_required = "true", @tabindex = "5" })
                        @Html.ValidationMessageFor(o => o.Terms)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Expected Delivery (mm/dd/yyyy)</label>
                        <div class="input-group">
                            @Html.TextBoxFor(o => o.ExpectedDeliveryDate, null, new { @class = "form-control datepicker-input", @readonly = "readonly", @placeholder = "Expected Delivery (mm/dd/yyyy)", data_date_format = "mm/dd/yyyy", @tabindex = "6" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(o => o.ExpectedDeliveryDate)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Down Payment</label>
                        <div class="input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.TextBoxFor(o => o.DownPayment, "{0:N0}", new { @class = "form-control currenciesOnly", @data_maxlength = "18", @placeholder = "Down Payment", @data_required = "true", @tabindex = "7" })
                            @Html.ValidationMessageFor(o => o.DownPayment)
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Delivery Place</label>
                        @Html.TextBoxFor(o => o.DeliveryPlace, null, new { @class = "form-control", @data_maxlength = "100", @placeholder = "Delivery Place", @data_required = "true", @tabindex = "8" })
                        @Html.ValidationMessageFor(o => o.DeliveryPlace)
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Remarks</label>
                        @Html.TextBoxFor(o => o.Remarks, null, new { @class = "form-control", @data_maxlength = "200", @placeholder = "Remarks", @tabindex = "9" })
                        @Html.ValidationMessageFor(o => o.Remarks)
                    </div>
                </div>
            </div>

        </div>
        <div class="panel-footer  bg-light lter">
            @StateButton.QuotationStateButton("add", Model.IsDraft, Model.IsValid, Model.IsSubmitted)
        </div>
    </section>

}
@{Html.RenderPartial("ModalPopUp");}

@section Scripts{

    @*<script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>*@
    <script src="@Url.Content("~/Content/ui-framework/js/datatables/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/datepicker/bootstrap-datepicker.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/parsley/parsley.min.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/currencyformat/jquery.formatCurrency-1.4.0.js")"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        $.connection.hub.start().done(function () {
            var myClientId = $.connection.hub.id;
            $('#ConnId').val(myClientId);
        });

        $(document).ready(function () {
            $('#btnLoadCalculation').focus();
            $("input[name*='statusButton']").attr('tabindex', 10);
            $(".currenciesOnly").on('keydown', currenciesOnly)
                                      .on('blur', function () { $(this).formatCurrency(); });
            $(".numbersOnly").on('keydown', numbersOnly);

            $('#Validuntil').change(
                function () {
                    GetValidityMonth();
                }
            );

            $('#COSQuotationDate').change(
                function () {
                    GetValidityMonth();
                }
            );

            function GetValidityMonth() {

                var date1 = new Date($('#Validuntil').val());
                var date2 = new Date($('#COSQuotationDate').val());
                if (date2 > date1) {
                    $('span[data-valmsg-for=Validuntil]').html("COS Quotation Date Should not Bigger than Valid Until");
                    $('span[data-valmsg-for=Validuntil]').addClass("text-danger").addClass("text-sm").show();
                    $('#ValidityMonth').val('');
                }
                else {
                    var timeDiff = Math.abs(date2.getTime() - date1.getTime());
                    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
                    $('span[data-valmsg-for=Validuntil]').hide();
                    $('#ValidityMonth').val(diffDays);
                }

            }

            $('.currenciesOnly').formatCurrency();
            $('.currenciesOnly').change(function () {
                $('.currenciesOnly').formatCurrency();
            });

        });

        function LoadProductCategory() {
            // datatable
            $('div.dataTables_filter input').focus();
            var oTable = null;
            $('#cos-lookup').each(function () {
                oTable = $(this).dataTable({
                    "bServerSide": true,
                    "bProcessing": true,
                    "bRetrieve": true,
                    "aaSorting": [[1, "desc"]],
                    "sAjaxSource": "@Url.Action("SalesCalculationModalDataTable", "SalesQuotation")",
                    "sDom": "<'row'<'col-sm-6'l><'col-sm-6'f>r>t<'row'<'col-sm-6'i><'col-sm-6'p>>",
                    "sPaginationType": "full_numbers",
                    "aoColumns": [
                    {
                        "mData": "IdCalculationOfSales",
                        "bVisible": false
                    },
                    { "mData": "COSNumber" },
                    { "mData": "CustomerName" },
                    { "mData": "ProductCode" },
                    { "mData": "BrandName" },
                    {
                        "mData": "UnitQuantity",
                        "fnRender": function (aObj) {
                            if (aObj.aData["UnitQuantity"] != null) {
                                return "<div class='text-right'>" + aObj.aData["UnitQuantity"] + "</div>";
                            }
                            return null;
                        }
                    },
                   {
                       "mData": "ActualResidualValue",
                       "fnRender": function (aObj) {
                           if (aObj.aData["ActualResidualValue"] != null) {
                               var num = aObj.aData["ActualResidualValue"];
                               var n = num.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                               return "<div class='text-right'>" + n + "</div>";
                           }
                           return null;
                       }
                   }
                    ],
                    "iDisplayLength": 5,
                    "bLengthChange": false
                });

            });


            $("#cos-lookup tbody").delegate("tr", "click", function () {
                var data = oTable.fnGetData(this);

                if (data.ModelYear) {
                    var modYear = new Date(parseInt(data.ModelYear.substr(6)));
                    var modeldate = modYear.getFullYear() + "/" + (modYear.getMonth() + 1);
                    $("#ModelYear").val(modeldate);
                } else {
                    $("#ModelYear").val("");
                }

                if (data.ScheduleDateForRegistration != null) {
                    var SchDateForRegistration = new Date(parseInt(data.ScheduleDateForRegistration.substr(6)));
                    var ScheduleDate = (SchDateForRegistration.getMonth() + 1) + "/" + SchDateForRegistration.getFullYear();
                    $("#ScheduleDateForRegistration").val(ScheduleDate);
                } else {
                    $("#ScheduleDateForRegistration").val("");
                }

                if (data.RegistrationDate) {
                    var RegistrationDate = new Date(parseInt(data.RegistrationDate.substr(6)));
                    var RegDate = (RegistrationDate.getMonth() + 1) + "/" + RegistrationDate.getDate() + "/" + RegistrationDate.getFullYear();
                    $("#RegistrationDate").val(RegDate);
                } else {
                    $("#RegistrationDate").val("");
                }

                $("#COSNumber").val(data.COSNumber);
                $("#CustomerName").val(data.CustomerName);
                $("#BrandCode").val(data.BrandCode);
                $("#BrandName").val(data.BrandName);
                $("#ModelName").val(data.ModelName);
                $("#DisPlacement").val(data.DisPlacement);
                $("#Transmission").val(data.Transmission);
                $("#FuelType").val(data.FuelType);
                $("#MaxLoadingCapacity").val(data.MaxLoadingCapacity);
                $("#ProductCategory1").val(data.ProductCategory1);
                $("#SpecialOptions").val(data.SpecialOptions);
                $("#Usage").val(data.Usage);
                $("#Location").val(data.Location);
                $("#NumberPlatColor").val(data.NumberPlatColor);
                $("#ProductCode").val(data.ProductCode);

                $("#ProductType").val(data.ProductType);
                $("#ModelCode").val(data.ModelCode);
                $("#ModelType").val(data.ModelType);
                $("#RidingCapacity").val(data.RidingCapacity);
                $("#EngineNumber").val(data.EngineNumber);
                $("#PoliceNumber").val(data.PoliceNumber);
                $("#ModelType").val(data.ModelType);

                $('#calculationModal').modal('hide');
                $('#COSProposalNumber').focus();
            });
        };

        $('#calculationModal').on('shown.bs.modal', function () {
            $('div.dataTables_filter input').focus();
        });
    </script>

}
