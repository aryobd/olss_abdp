@using System.Collections.Concurrent
@using System.Web.UI.WebControls
@using Dsf.Lib.Constant
@using Dsf.Olss.Utility
@model Dsf.Olss.Models.ApprovalPathViewModel


@{
    ViewBag.Title = "Create Approval Path";
    var localeDateFormat = System.Threading.Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern;
}

@section Styles{
    <link href=@Url.Content("~/Content/ui-framework/css/style.css") rel="stylesheet" />

    <link href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") rel="stylesheet" />
}

<a title="" class="btn btn-white" href="@Url.Action("Index", "ApprovalPath")" data-original-title=" "><i class=" fa fa-chevron-left"></i> Back</a>
<hr>

@Message.Display(ViewBag.Success, ViewBag.Error)
<div id="alert_placeholder"></div>

@using (Html.BeginForm("Add", "ApprovalPath", FormMethod.Post))
{
    <section class="panel">
        <header class="panel-heading font-bold">Approval Path Information</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>Module</label></div>
                        <div class="col-lg-10">
                            @*@Html.HiddenFor(o => o.IdTb_OPL_Module)*@
                            @Html.DropDownListFor(o => o.IdTb_OPL_Module, ViewBag.ModuleNameList as List<SelectListItem>, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.IdTb_OPL_Module)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>DSF Office</label></div>
                        <div class="col-lg-10">
                            @Html.HiddenFor(o => o.IdTb_OPL_Branch)
                            <div class="input-group">
                                @Html.TextBoxFor(o => o.BranchName, null, new
                                {
                                    @name = "BranchName",
                                    @class = "form-control mandatory"
                                })
                                <span class="input-group-btn">
                                    <button class="btn btn-white" data-toggle="modal" data-target="#branchOfficeModal" type="button" onclick=" loadBranchOfficeData() " tabindex="1">...</button>
                                </span>
                            </div><!-- /input-group -->
                            @Html.ValidationMessageFor(o => o.BranchName)
                        </div>
                    </div>
                </div>
            </div> 

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>Start Active Date</label></div>
                        <div class="col-lg-10">
                            <div class="input-group">
                                @Html.TextBoxFor(o => o.StartActiveDate, String.Format("{{0: " + localeDateFormat + "}}", Model.StartActiveDate), new { @class = "form-control mandatory", @id = "datePic" })
                                <span class="input-group-addon">
                                    <span class="fa fa-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Approval Path Detail Information</header>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <div class="col-lg-2"><label>Range Amount</label></div>
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-btn" onchange="getRangeAmountBase()">
                                <div class="btn-group m-r">
                                    <button data-toggle="dropdown" class="btn btn-sm btn-white dropdown-toggle">
                                        <span class="dropdown-label">Rp</span>
                                        <!--  <span class="caret"></span> -->
                                    </button>
                                </div>
                            </div>
                            @Html.TextBoxFor(o => o.RangeAmountBase, null, new { @id = "baseAmount", @class = "form-control numeric mandatory", @maxlength = "14", @onkeyup = "numericOnly('#baseAmount');", @Value = "0" })
                        </div>
                        @Html.ValidationMessageFor(o => o.RangeAmountBase)
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <div class="col-lg-1">
                        <label>---</label>
                    </div>
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-btn">
                                <div class="btn-group m-r">
                                    <button data-toggle="dropdown" class="btn btn-sm btn-white dropdown-toggle">
                                        <span class="dropdown-label">Rp</span>
                                    </button>
                                </div>
                            </div>@Html.TextBoxFor(o => o.RangeAmountLimit, null, new { @id = "limitAmount", @class = "form-control numeric mandatory", @maxlength = "14", @onkeyup = "numericOnly('#limitAmount');", @Value = "1" })
                        </div>
                        @Html.ValidationMessageFor(o => o.RangeAmountLimit)
                    </div> <br />
                </div>
            </div>
        </div>

        <header class="panel-heading font-bold">Role Information</header>
        <div class="responsive">
            <table class="table table-striped table-input m-b-none text-sm" id="mtable">
                <thead>
                    <tr>
                        <th width="10%">Approval Level</th>
                        <th width="25%">Role Name</th>
                        <th width="20%">Role Setting</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="rowUnit" id="rUnit">
                        <td>
                            @Html.DropDownListFor(o => o.ApprovalDetailList[0].ApprovalCodeLevel, ViewBag.ApprovalLevelList as List<SelectListItem>, new { @id = "ApprovalLevelCode1", @class = "form-control mandatory approvalCode" })
                            @Html.ValidationMessageFor(o => o.ApprovalDetailList[0].ApprovalCodeLevel)
                        </td>
                        <td>
                            @Html.DropDownListFor(o => o.ApprovalDetailList[0].IdTb_OPL_JobTItles, ViewBag.JobTitleNameList as List<SelectListItem>, new { @id = "IdTb_OPL_JobTItles1", @class = "form-control mandatory jobTitle" })
                            @Html.ValidationMessageFor(o => o.ApprovalDetailList[0].IdTb_OPL_JobTItles)
                        </td>
                        <td>
                            <div class="input-group">
                                <select class="form-control mandatory" id="rolesettinglist1" disabled="disabled">
                                    <option value="MS">Must Sign</option>
                                    <option value="NMS">Not Must Sign</option>
                                    <option selected="selected" value="">Role Setting</option>
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-danger font-bold add_item fa fa-minus" type="button" disabled="disabled"></button>
                                </span>
                            </div>
                        </td>
                        @*<td>
                                <span class="input-group-btn">
                                    <button class="btn btn-info font-bold add_item fa fa-minus"  type="button"></button>
                                </span>
                            </td>*@
                    </tr>
                </tbody>
            </table>
            <div class="panel-footer bg-light lter">
                <button class="btn btn-primary" id="addUnit" type="button"> Add New Role</button>
                <button class="btn btn-primary" id="show" type="button"> Add New Range Amount</button>
                <button class="btn btn-primary" id="editsave" type="button" style="display: none"> Save </button>
            </div>
        </div>
    </section>

    <section class="panel">
        <div id="ApprovalInformation" >

            <header class="panel-heading font-bold">Approval Path Hierarchy Information <br/>
            @Html.ValidationMessageFor(model => model.ApprovalPathList)</header>
            <div class="table-responsive">
                <table class="table table-striped table-input m-b-none text-sm" id="rangetable">
                    <thead>
                        <tr>
                            <th width="25%">Amount Range (IDR)</th>
                            <th width="20%">Proposed</th>
                            <th width="20%">Checked</th>
                            <th width="20%">Approve</th>
                            <th width="8%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*Put Table Range Amount Here*@
                    </tbody>
                </table>
            </div>

        </div>
    </section>

    <section class="panel">
        <footer class="panel-footer bg-light lter">
            <input type="hidden" id="submitButtonText" />
            @StateButton.Create("submitApprovalPath")
        </footer>
    </section>

}

@{Html.RenderPartial("ModalPopUp");}


@section Scripts{
    <script src="@Url.Content("~/Content/ui-framework/js/datatables/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/autoNumeric-1.9.18.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/js/ApprovalPath.js")"></script>

    <script>
        // Global variable for CustomerVisitSurvey.js
        var serverRoot = '@Url.Content("~")';
    </script>

    <script type="text/javascript">
        // This must be applied to a form (or an object inside a form).
        jQuery.fn.addHidden = function(name, value) {
            return this.each(function() {
                var input = $("<input>").attr("type", "hidden").attr("name", name).val(value);
                $(this).append($(input));
            });
        };

        //Confirmation Modal
        $('input[name="statusButton"]').on('click', function(e) {

            $('#mtable > tbody').find("tr[class=rowAmountRange]").remove();

            var submitvalue = $(this).val();
            var msg = '';
            if (submitvalue === 'Save as Draft') {
                msg = 'Save';
            } else if ((submitvalue === 'Submit')) {
                msg = 'Submit';
            }
            setValApt();
            $('#msgModal').text(msg);
            $('#submitButtonText').val(submitvalue);
            $('#mtable > tbody').find("tr[class=rowAmountRange]").attr("style", "display: none");  //remove();
            var checkListRange = $('#mtable > tbody').find("tr[class=rowAmountRange]").length;
            if (checkListRange == 0) {
                $('span[data-valmsg-for="ApprovalPathList"]').removeClass("field-validation-valid").addClass("field-validation-error");
                $('span[data-valmsg-for="ApprovalPathList"]').text("Must Add New Range Amount for Approval Path Hierarchy Information !");
                return false;
            }else {
                $('span[data-valmsg-for="ApprovalPathList"]').removeClass("field-validation-error").addClass("field-validation-valid");
                $('span[data-valmsg-for="ApprovalPathList"]').text("");
            }
        });

        $('#confirmModal').click(function(e) {
            var submitvalue = $('#submitButtonText').val();
            $('form:first').addHidden('statusButton', submitvalue).trigger('submit');
        });

        //change type submit to button to provide modal popup
        $('input[name="statusButton"]').attr('type', 'button').attr('data-toggle', 'modal').attr('data-target', '#myModal');

        $('.datePic').datepicker({
            format: '@localeDateFormat.ToLower()'
        });
    </script>

    <script>

        var approveLevelInfo = [];
        var jobTitleNameInfo = [];
        var jobTitleNameInfoId = [];

        function setValApt(){

            var newTr = "";
            var selects = $('tr[id*=rApproval]');

            for (var i = 0; i < selects.length; i++) {
                var itemSelect = selects[i];
                var index = itemSelect.id.replace('rApproval', '');

                var mountRange = $('#amount' + index ).val();

                var jobtitleids = $('#proposedId' + index ).val();
                jobtitleids +=', ' + $('#checkedId' + index ).val();
                jobtitleids +=', ' + $('#approvedId' + index ).val();

                var approvalCodeLevels = $('#proposedlevel' + index ).val();
                approvalCodeLevels +=', ' + $('#checkedlevel' + index ).val();
                approvalCodeLevels +=', ' + $('#approvedlevel' + index ).val();

                var rolesettingss = $('#proposedsetting' + index ).val();
                rolesettingss +=', ' + $('#checkedsetting' + index ).val();
                rolesettingss +=', ' + $('#approvedsetting' + index ).val();

                var amount = mountRange.split(' - ');

                newTr += '<tr class="rowAmountRange" id="rApproval'+(index)+'">' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RangeAmountBase" value="' + amount[0] + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RangeAmountLimit" value="' + amount[1] + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].JobTitleIds" value="' + jobtitleids + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].ApprovalCodeLevels" value="' + approvalCodeLevels + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RoleSettingCodes" value="' + rolesettingss + '"></td>' +
                    '</tr>';
            }

            $($('#mtable > tbody')).append(newTr);

        };


        $(document).ready(function() {
            var approveLevelInfoList = @Html.Raw(Json.Encode(@ViewBag.ApprovalLevelList));
            var jobTitleNameList = @Html.Raw(Json.Encode(@ViewBag.JobTitleNameList));

            for (var item = 0; item < approveLevelInfoList.length; item++) {
                if (approveLevelInfoList[item].Text != "Proposed") {
                    $('#ApprovalLevelCode1 option[value="' + approveLevelInfoList[item].Text + '"]').remove();
                }
            }

            for (var proveIndex = 0; proveIndex < approveLevelInfoList.length; proveIndex++) {
                approveLevelInfo.push(approveLevelInfoList[proveIndex].Text);
            }

            for (var titleIndex = 0; titleIndex < jobTitleNameList.length; titleIndex++) {
                jobTitleNameInfo.push(jobTitleNameList[titleIndex].Text);
            }
            for (var titleCount = 0; titleCount < jobTitleNameList.length; titleCount++) {
                jobTitleNameInfoId.push(jobTitleNameList[titleCount].Value);
            }
        });
    </script>

}


