@using System.Web.UI.WebControls
@using Dsf.Lib.Constant
@using Dsf.Olss.Utility
@model Dsf.Olss.Models.ApprovalPathViewModel

@{
    ViewBag.Title = "Edit Approval Path";
    var localeDateFormat = System.Threading.Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern;
}

@section Styles{
    <link href=@Url.Content("~/Content/ui-framework/css/style.css") rel="stylesheet" />

    <link href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") rel="stylesheet" />
}

<a title="" class="btn btn-white" href="@Url.Action("Index", "ApprovalPath")" data-original-title=" "><i class=" fa fa-chevron-left"></i> Back</a>
<hr>
@Message.Display(ViewBag.Success, ViewBag.Error)

<div class="panel label-panel">
    <div class="row" style="padding-bottom:10px;">
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left:15px; float:left;"><i class="fa fa-user text-danger"></i> Created by</div><div style="float:left; padding-left:15px;">@(Model.CreatedBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Created Date</div><div style="float: left; padding-left: 15px;">@(String.Format("{0:MM/dd/yyyy}", Model.CreatedDate))</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-user text-danger"></i> Last Modified By</div><div style="float: left; padding-left: 15px;">@(Model.LastModifiedBy)</div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;"><i class="fa fa-calendar text-danger"></i> Last  Modified Date</div><div style="float: left; padding-left: 15px;">@(String.Format("{0:MM/dd/yyyy}", Model.LastModifiedDate))</div>
        </div>
    </div>
</div>


@using (Html.BeginForm("Edit", "ApprovalPath", FormMethod.Post))
{
    <section class="panel">
        <header class="panel-heading font-bold">Approval Path Information</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>Module</label></div>
                        <div class="col-lg-10">
                            @Html.HiddenFor(o => o.IdSubmit)
                            @Html.HiddenFor(o => o.IdTbOplJobTitles)
                            @Html.HiddenFor(o => o.IdTb_OPL_Module)
                            @Html.DropDownListFor(o => o.IdTb_OPL_Module, ViewBag.ModuleNameList as List<SelectListItem>, new
                            {
                                @class = "form-control",
                                @disabled = "disabled"
                            })
                            @Html.ValidationMessageFor(o => o.IdTb_OPL_Module)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>DSF Office</label></div>
                        <div class="col-lg-10">
                            <div class="input-group">
                                @Html.HiddenFor(o => o.IdTb_OPL_Branch)
                                @Html.HiddenFor(o => o.BranchName)
                                @Html.TextBoxFor(o => o.BranchName, null, new
                                {
                                    @name = "BranchName",
                                    @class = "form-control mandatory",
                                    @readonly = "readonly"
                                })
                                <span class="input-group-btn">
                                    <button class="btn btn-white" data-toggle="modal" data-target="#branchOfficeModal" type="button" disabled="disabled" tabindex="1">...</button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(o => o.BranchName)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-2"><label>Start Active Date</label></div>
                        <div class="col-lg-10">
                            <div class="input-group date">
                                @Html.TextBoxFor(o => o.StartActiveDate, String.Format("{{0: " + localeDateFormat + "}}", Model.StartActiveDate), new { @class = "form-control datepicker mandatory" })
                                <span class="input-group-addon mandatory">
                                    <span class="fa fa-calendar"></span>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(o => o.StartActiveDate)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Approval Path Details Information</header>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <div class="col-lg-2"><label>Range Amount</label></div>
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-btn" onchange="getRangeAmountBase()">
                                <div class="btn-group m-r">
                                    <button data-toggle="dropdown" class="btn btn-sm btn-white dropdown-toggle">
                                        <span class="dropdown-label">Rp</span>
                                    </button>
                                </div>
                            </div>
                            @Html.TextBoxFor(o => o.RangeAmountBase, null, new { @id = "baseAmount", @class = "form-control numeric mandatory", @data_maxlength = "23", @onkeyup = "numericOnly('#baseAmount');" })
                        </div>
                        @Html.ValidationMessageFor(o => o.RangeAmountBase)
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <div class="col-lg-1">
                        <label>---</label>
                    </div>
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-btn">
                                <div class="btn-group m-r">
                                    <button data-toggle="dropdown" class="btn btn-sm btn-white dropdown-toggle">
                                        <span class="dropdown-label">Rp</span>
                                        <span class="caret"></span>
                                    </button>
                                </div>
                            </div>
                            @Html.TextBoxFor(o => o.RangeAmountLimit, null, new { @id = "limitAmount", @class = "form-control numeric mandatory", @data_maxlength = "23", @onkeyup = "numericOnly('#limitAmount');" })
                        </div>
                        @Html.ValidationMessageFor(o => o.RangeAmountLimit)
                    </div><br />
                </div>
            </div>
        </div>


        <header class="panel-heading font-bold">Role Information</header>
        <div class="responsive">
            <table class="table table-striped table-input m-b-none text-sm" id="mtable">
                <thead>
                    <tr>
                        <th width="18%">Approval Level</th>
                        <th width="46%">Role Name</th>
                        <th width="43%">Role Setting</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="rowUnit" id="rUnit">
                        <td>
                            @Html.DropDownListFor(o => o.ApprovalDetailList[0].ApprovalCodeLevel, ViewBag.ApprovalLevelList as List<SelectListItem>, new { @id = "ApprovalLevelCode1", @class = "form-control mandatory approvalCode" })
                            @Html.ValidationMessageFor(o => o.ApprovalDetailList[0].ApprovalCodeLevel)
                        </td>
                        <td>
                            @Html.DropDownListFor(o => o.ApprovalDetailList[0].IdTb_OPL_JobTItles, ViewBag.JobTitleNameList as List<SelectListItem>, new { @id = "IdTb_OPL_JobTItles1", @class = "form-control mandatory jobTitle" })
                            @Html.ValidationMessageFor(o => o.ApprovalDetailList[0].IdTb_OPL_JobTItles)
                        </td>
                        <td>
                            <div class="input-group">
                                <select class="form-control mandatory" id="rolesettinglist1" disabled="disabled">
                                    <option value="MS">Must Sign</option>
                                    <option value="NMS">Not Must Sign</option>
                                    <option selected="selected" value=" ">Role Setting</option>
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-danger font-bold add_item fa fa-minus" type="button" disabled="disabled"></button>
                                </span>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="panel-footer bg-light lter">
                <button class="btn btn-primary" id="addUnit" type="button"> Add New Role</button>
                <button class="btn btn-primary" id="show" type="button"> Add New Range Amount</button>
                <button class="btn btn-primary" id="editsave" type="button" style="display: none"> Save </button>
            </div>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Approval Path Hierarchy Information</header>
        <div class="table-responsive">
            <table class="table table-striped table-input m-b-none text-sm" id="rangetable">
                <thead>
                    <tr>
                        <th width="25%">Amount Range (IDR)</th>
                        <th width="20%">Proposed</th>
                        <th width="20%">Checked</th>
                        <th width="20%">Approve</th>
                        <th width="8%">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @*Put Table Range Amount Here*@
                </tbody>
            </table>
        </div>
    </section>


    <section class="panel">
        <header class="panel-heading font-bold">Revision History</header>
        <div class="panel-body">
            <table class="table table-striped table-input m-b-none text-sm">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.RevHistories != null)
                    {
                        foreach (var history in Model.RevHistories)
                        {
                            <tr>
                                <td width="20">
                                    <label class="form-control">@history.CreateBy</label>
                                </td>
                                <td width="20">
                                    <label class="form-control">@history.CreateDate</label>
                                </td>
                                <td width="20">
                                    <label class="form-control">@history.Act</label>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </section>

    <section class="panel">
        <footer class="panel-footer bg-light lter">
            @Html.HiddenFor(o => o.CreatedBy)

            @Html.HiddenFor(o => o.CreatedDate)

            <input type="hidden" id="submitButtonText" />
            @StateButton.CreateStateApprovalPath("edit")
        </footer>
    </section>
}

@{Html.RenderPartial("ModalPopUp");}

@section Scripts{
    <script src="@Url.Content("~/Content/ui-framework/js/datatables/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Content/ui-framework/js/autoNumeric-1.9.18.js")"></script>
    <script src="@Url.Content("~/Content/js/Olss.js")"></script>
    <script src="@Url.Content("~/Content/js/ApprovalPath.js")"></script>

    <script>
        // Global variable for CustomerVisitSurvey.js
        var serverRoot = '@Url.Content("~")';
    </script>

    <script type="text/javascript">
        // This must be applied to a form (or an object inside a form).
        jQuery.fn.addHidden = function(name, value) {
            return this.each(function() {
                var input = $("<input>").attr("type", "hidden").attr("name", name).val(value);
                $(this).append($(input));
            });
        };

        //Confirmation Modal
        $('input[name="statusButton"]').on('click', function(e) {

            var submitvalue = $(this).val();
            var msg = '';
            if (submitvalue === 'Save as Draft') {
                msg = 'Save';
            } else if ((submitvalue === 'Submit')) {
                msg = 'Submit';
            }
            setValApt();
            $('#msgModal').text(msg);
            $('#submitButtonText').val(submitvalue);
        });

        $('#confirmModal').click(function(e) {
            var submitvalue = $('#submitButtonText').val();
            $('form:first').addHidden('statusButton', submitvalue).trigger('submit');
        });

        //change type submit to button to provide modal popup
        $('input[name="statusButton"]').attr('type', 'button').attr('data-toggle', 'modal').attr('data-target', '#myModal');

        $('.datepicker').datepicker({
            format: '@localeDateFormat.ToLower()'
        });
    </script>

    <script>

        var approveLevelInfo = [];
        var jobTitleNameInfo = [];
        var jobTitleNameInfoId = [];

        function setValApt()
        {
            var newTr = "";
            var selects = $('tr[id*=rApproval]');

            for (var i = 0; i < selects.length; i++) {
                var itemSelect = selects[i];
                var index = itemSelect.id.replace('rApproval', '');

                var approvalPathId = $('#aptId' + index ).val();

                var mountRange = $('#amount' + index ).val();

                var jobtitleids = $('#proposedId' + index ).val();
                jobtitleids +=', ' + $('#checkedId' + index ).val();
                jobtitleids +=', ' + $('#approvedId' + index ).val();

                var approvalCodeLevels = $('#proposedlevel' + index ).val();
                approvalCodeLevels +=', ' + $('#checkedlevel' + index ).val();
                approvalCodeLevels +=', ' + $('#approvedlevel' + index ).val();

                var rolesettingss = $('#proposedsetting' + index ).val();
                rolesettingss +=',' + $('#checkedsetting' + index ).val();
                rolesettingss +=',' + $('#approvedsetting' + index ).val();

                var approvalPathDtlsId = $('#proposedAptDtlId' + index ).val();
                approvalPathDtlsId +=', ' + $('#checkedAptDtlId' + index ).val();
                approvalPathDtlsId +=', ' + $('#approvedAptDtlId' + index ).val();

                var amount = mountRange.split(' - ');

                rolesettingss = rolesettingss.replace(new RegExp('undefined','g'),'');

                newTr += '<tr class="rowAmountRange" id="rApproval'+(i)+'">' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RangeAmountBase" value="' + amount[0] + '" /><input type="hidden" name="ApprovalPathList[' + (i) + '].IdTb_SYS_ApprovalPath" value="' + approvalPathId + '" /></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RangeAmountLimit" value="' + amount[1] + '" /><input type="hidden" name="ApprovalPathList[' + (i) + '].AptDtlIds" value="' + approvalPathDtlsId + '" /></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].JobTitleIds" value="' + jobtitleids + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].ApprovalCodeLevels" value="' + approvalCodeLevels + '"></td>' +
                    '<td><input type="hidden" name="ApprovalPathList[' + (i) + '].RoleSettingCodes" value="' + rolesettingss + '"></td>' +
                    '</tr>';
            }

            $($('#mtable > tbody')).append(newTr);

        }

        $(document).ready(function() {

            var approveLevelInfoList = @Html.Raw(Json.Encode(@ViewBag.ApprovalLevelList));
            var jobTitleNameList = @Html.Raw(Json.Encode(@ViewBag.JobTitleNameList));

            for (var item = 0; item < approveLevelInfoList.length; item++) {
                if (approveLevelInfoList[item].Text != "Proposed") {
                    $('#ApprovalLevelCode1 option[value="' + approveLevelInfoList[item].Text + '"]').remove();
                }
            }

            for (var proveIndex = 0; proveIndex < approveLevelInfoList.length; proveIndex++) {
                approveLevelInfo.push(approveLevelInfoList[proveIndex].Text);
            }

            for (var titleIndex = 0; titleIndex < jobTitleNameList.length; titleIndex++) {
                jobTitleNameInfo.push(jobTitleNameList[titleIndex].Text);
            }

            for (var titleCount = 0; titleCount < jobTitleNameList.length; titleCount++) {
                jobTitleNameInfoId.push(jobTitleNameList[titleCount].Value);
            }

            var newTr = '';
            var row = $('tr[id*=rApproval]').length;
            var aptList = @Html.Raw(Json.Encode(Model.ApprovalPathList));

            if(aptList.length > 0)
            {
                for (var i = 0; i < aptList.length; i++)
                {
                    var range = getRangeAmount(aptList[i].RangeAmount);

                    newTr +='<tr class="rowAmountRange" id="rApproval' + (i + 1) + '">'+
                    '<td><input class="form-control" id="amount' + (i + 1) + '" type="text" readonly="readonly" value="'+range+'"/><input id="aptId' + (i + 1) + '" type="hidden" value="' + aptList[i].IdTb_SYS_ApprovalPath +'" /><input id="aptDtlsId' + (i + 1) + '" type="hidden" value="' + aptList[i].IdTb_SYS_ApprovalPathDtls +'" /></td>' +
                    '<td><textarea class="form-control" id="proposedBy' + (i + 1) + '" readonly="readonly"">'+aptList[i].Proposed+'</textarea><input id="proposedId' + (i + 1) + '" type="hidden" value="' + aptList[i].ProposedId +'" /><input id="proposedlevel' + (i + 1) + '" type="hidden" value="' + aptList[i].ProposedLevel +'" /><input id="proposedsetting' + (i + 1) + '" type="hidden" value="' + aptList[i].ProposedSetting +'" /><input id="proposedAptDtlId' + (i + 1) + '" type="hidden" value="' + aptList[i].ProposedAptDtlId +'" /></td>' +
                    '<td><textarea class="form-control" id="checkedBy' + (i + 1) + '" readonly="readonly"">'+aptList[i].Checked+'</textarea><input id="checkedId' + (i + 1) + '" type="hidden" value="' + aptList[i].CheckedId +'" /><input id="checkedlevel' + (i + 1) + '" type="hidden" value="' + aptList[i].CheckedLevel +'" /><input id="checkedsetting' + (i + 1) + '" type="hidden" value="' + aptList[i].CheckedSetting +'" /><input id="checkedAptDtlId' + (i + 1) + '" type="hidden" value="' + aptList[i].CheckedAptDtlId +'" /></td>' +
                    '<td><textarea class="form-control" id="approvedBy' + (i + 1) + '" readonly="readonly"">'+aptList[i].Approved+'</textarea><input id="approvedId' + (i + 1) + '" type="hidden" value="' + aptList[i].ApprovedId +'" /><input id="approvedlevel' + (i + 1) + '" type="hidden" value="' + aptList[i].ApprovedLevel +'" /><input id="approvedsetting' + (i + 1) + '" type="hidden" value="' + aptList[i].ApprovedSetting +'" /><input id="approvedAptDtlId' + (i + 1) + '" type="hidden" value="' + aptList[i].ApprovedAptDtlId +'" /></td>' +
                    '<td style="text-align:center;vertical-align:middle;"><a class="btn btn-primary btn-xs" id="editRowAmount"><i class="fa fa-edit"></i></a>';
                    if (aptList.length == (i + 1)){
                        newTr+='&nbsp;<a class="btn btn-danger font-bold btn-xs" id="deleteRowAmount"><i class="fa fa-minus"></i></a>';
                    }
                    else {
                        newTr +='&nbsp;<a class="btn btn-danger font-bold btn-xs" id="deleteRowAmount" disabled="disabled"><i class="fa fa-minus"></i></a>';
                    }
                    '</td></tr>';

                }
                $($('#rangetable')).append(newTr);

                setNewRangeAmount(aptList[aptList.length-1].RangeAmount);
            }

            $('tr[id=rUnit]').remove();
            $('#addUnit').click();
            $('button[id=deleteRow]').attr("disabled", "disabled");
        });
    </script>
}
