@model Dsf.Olss.Models.MGTBASTSuppCustViewModel
@using Dsf.Olss.Utility;
@using Dsf.Lib.Constant;

@{
    ViewBag.Title = "Edit BAST";
    var localeDateFormat = System.Threading.Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern;
    var rowNumberEquipment = 0;
    var rowNumberCondition = 0;
    var rowNumberTabCondition = 0;
    var rowNumberCarroserrie = 0;
    var rowNumberTabCarroserrie = 0;
    var rowNumberAccessorie = 0;
    var rowNumberTabAccessorie = 0;

}
@section Styles{
    <link rel="stylesheet" href="@Url.Content("~/Content/ui-framework/css/style.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/ui-framework/js/datatables/datatables.css")" type="text/css" />
}

<a href="@Url.Action("Index", "MGTPreparationUnit")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a><br><br>
@Message.Display(ViewBag.Success, ViewBag.Error)
<hr>
<div class="panel label-panel">
    <div class="row" style="padding-bottom:10px;">
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left:15px; float:left;">
                <i class="fa fa-user text-danger"></i> Created by
            </div>
            <div style="float:left; padding-left:15px;">
                <span id="DisplayCreatedBy">@Html.DisplayFor(o => o.CreatedBy)</span>
            </div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;">
                <i class="fa fa-calendar text-danger"></i> Created Date
            </div>
            <div style="float: left; padding-left: 15px;">
                <span id="DisplayCreatedDate">
                    @{
                        if (!string.IsNullOrEmpty(Model.CreatedBy))
                        {
                            @Html.DisplayFor(o => o.CreatedDate)
                        }
                    }
                </span>
            </div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;">
                <i class="fa fa-user text-danger"></i> Last Modified By
            </div>
            <div style="float: left; padding-left: 15px;">
                <span id="DisplayLastModifiedBy">@Html.DisplayFor(o => o.LastModifiedBy)</span>
            </div>
        </div>
        <div class="col-xs-6 col-sm-3">
            <div class="font-bold" style="padding-left: 15px; float: left;">
                <i class="fa fa-calendar text-danger"></i> Last  Modified Date
            </div>
            <div style="float: left; padding-left: 15px;">
                <span id="DisplayLastModifiedDate">@Html.DisplayFor(o => o.LastModifiedDate)</span>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "MGTPreparationUnit", FormMethod.Post))
{
    <section class="panel">
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>BAST Supplier No</label></div>
                        <div class="col-lg-6">
                            <div class="input-group">
                                @Html.TextBoxFor(o => o.BASTSPNo, null, new { @class = "form-control mandatory" })
                                @Html.HiddenFor(o => o.IdTbMGTBASTSupCust)
                                <span class="input-group-btn">
                                    <button class="btn btn-white" type="button" data-toggle="modal" data-target="#bastNoModal" onclick="loadBASTNo()">...</button>
                                </span>
                            </div><!-- /input-group -->
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>BAST Customer No</label></div>
                        <div class="col-lg-6">
                            <div class="input-group">
                                @Html.TextBoxFor(o => o.BASTCTNo, null, new { @class = "form-control mandatory" })
                                <span class="input-group-btn">
                                    <button class="btn btn-white" type="button" data-toggle="modal" data-target="#bastNoModal" onclick="loadBASTNo()">...</button>
                                </span>
                            </div><!-- /input-group -->
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Agreement No</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.AgreementNumber, null, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Chassis No</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.ChassisNumber, null, new { @class = "form-control", @maxlength = "30" })
                            @Html.ValidationMessageFor(o => o.ChassisNumber)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Lesee</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.Lesse, null, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Machine No</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.EngineNumber, null, new { @class = "form-control", @maxlength = "30" })
                            @Html.ValidationMessageFor(o => o.EngineNumber)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Supplier</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.Supplier, null, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>KM</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.KM, null, new { @class = "form-control thousandSeparator" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Unit Description</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.UnitDescription, null, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Company Insurance</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.CompanyInsurance, null, new { @class = "form-control", @maxlength = "50" })
                            @Html.ValidationMessageFor(o => o.CompanyInsurance)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Year</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.Year, null, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Insurance Number</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.InsuranceNumber, null, new { @class = "form-control", @maxlength = "50" })
                            @Html.ValidationMessageFor(o => o.InsuranceNumber)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Colour</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.Colour, null, new { @class = "form-control", @maxlength = "20" })
                            @Html.ValidationMessageFor(o => o.Colour)
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6">
                            <label>Start Insurance</label>
                        </div>
                        <div class="col-lg-6">
                            <div class="input-group date">
                                @Html.TextBoxFor(o => o.StartInsurance, String.Format("{{0:" + localeDateFormat + "}}", Model.StartInsurance), new { @class = "form-control date-validation dateappend" })
                                @Html.ValidationMessageFor(o => o.StartInsurance)
                                <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6"><label>Police No</label></div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(o => o.PoliceNumber, null, new { @class = "form-control", @maxlength = "20" })
                            @Html.ValidationMessageFor(o => o.PoliceNumber)
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-6">
                            <label>End Insurance</label>
                        </div>
                        <div class="col-lg-6">
                            <div class="input-group date">
                                @Html.TextBoxFor(o => o.EndInsurance, String.Format("{{0:" + localeDateFormat + "}}", Model.EndInsurance), new { @class = "form-control date-validation dateappend" })
                                @Html.ValidationMessageFor(o => o.EndInsurance)
                                <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <br />
        </div>
        @*Add 03 May 2018 - Tax Invoice section*@
        <section class="panel">
            <div class="panel-body">
                <div class="row">

                    <header class="panel-heading font-bold">Tax Invoice</header>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6"><label>Tax Invoice Number</label></div>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(o => o.TaxInvoiceNumber, null, new { @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(o => o.TaxInvoiceNumber)

                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <label>VAT Amount</label>
                            </div>
                            <div class="col-lg-6">
                                <div class="input-group date">
                                    @Html.TextBoxFor(o => o.TaxInvoiceAmount, null, new { @onkeypress = "return event.charCode >= 48 && event.charCode <= 57", @class = "form-control numbersOnly", @placeholder = "VAT Amount" })
                                    @Html.ValidationMessageFor(o => o.TaxInvoiceAmount)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        @*end add - Rudolf*@






        <section class="scrollable wrapper">
            <div class="tab-pane" id="datatable">
                <section class="panel">
                    <table class="table table-striped table-input m-b-none text-sm">
                        <thead>
                            <tr>
                                <td colspan="8">
                                    <label class="form-control">Document Complement</label>
                                </td>
                            </tr>
                            <tr>
                                <th rowspan="2" width="1%">No</th>
                                <th rowspan="2" width="39%">Description</th>
                                <th colspan="2" width="10%" class="text-center">Available</th>
                                <th colspan="2" width="20%" class="text-center">Expired Date</th>
                                <th rowspan="2" width="20%">Remarks</th>
                            </tr>
                            <tr>
                                <th width="10%" class="text-center">Yes</th>
                                <th width="10%" class="text-center">No</th>
                                <th width="10%" class="text-center">Start</th>
                                <th width="10%" class="text-center">End</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <p class="form-control-static">1</p>
                                </td>
                                <td>
                                    <p class="form-control-static">STNK</p>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>
                                            @Html.RadioButtonFor(o => o.IsSTNK, true)
                                        </label>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.IsSTNK)</div>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>@Html.RadioButtonFor(o => o.IsSTNK, false)</label>
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.StartSTNK, String.Format("{{0:" + localeDateFormat + "}}", Model.StartSTNK), new { @class = "form-control date-validation dateappend" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.StartSTNK)</div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.EndSTNK, String.Format("{{0:" + localeDateFormat + "}}", Model.EndSTNK), new { @class = "form-control date-validation dateappend" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.EndSTNK)</div>
                                </td>
                                <td>
                                    @Html.TextAreaFor(o => o.RemarkSTNK, new { @class = "form-control", @rows = "1", @maxlength = "100" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="form-control-static">2</p>
                                </td>
                                <td>
                                    <p class="form-control-static">STNK Sementara</p>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>@Html.RadioButtonFor(o => o.IsSTNK2, true, new { @disabled = "disabled" })</label>
                                    </div>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>@Html.RadioButtonFor(o => o.IsSTNK2, false, new { @disabled = "disabled" })</label>
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.StartSTNK2, String.Format("{{0:" + localeDateFormat + "}}", Model.StartSTNK2), new { @class = "form-control date-validation dateappend", @disabled = "disabled" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.StartSTNK2)</div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.EndSTNK2, String.Format("{{0:" + localeDateFormat + "}}", Model.EndSTNK2), new { @class = "form-control date-validation dateappend", @disabled = "disabled" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.EndSTNK2)</div>
                                </td>
                                <td>
                                    @Html.TextAreaFor(o => o.RemarkSTNK2, new { @class = "form-control", @rows = "1", @maxlength = "100", @disabled = "disabled" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="form-control-static">3</p>
                                </td>
                                <td>
                                    <p class="form-control-static">KEUR</p>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>
                                            @Html.RadioButtonFor(o => o.IsKEUR, true)
                                        </label>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.IsKEUR)</div>
                                </td>
                                <td>
                                    <div class="radioPositionCenter">
                                        <label>@Html.RadioButtonFor(o => o.IsKEUR, false)</label>
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.StartKEUR, String.Format("{{0:" + localeDateFormat + "}}", Model.StartKEUR), new { @class = "form-control date-validation dateappend" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.StartKEUR)</div>
                                </td>
                                <td>
                                    <div class="input-group date" id="datetimepicker1">
                                        @Html.TextBoxFor(o => o.EndKEUR, String.Format("{{0:" + localeDateFormat + "}}", Model.EndKEUR), new { @class = "form-control date-validation dateappend" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    <div class="text-center">@Html.ValidationMessageFor(o => o.EndKEUR)</div>
                                </td>
                                <td>
                                    @Html.TextAreaFor(o => o.RemarkKEUR, new { @class = "form-control", @rows = "1", @maxlength = "100" })
                                </td>
                            <tr></tr>
                        </tbody>
                    </table>
                </section>
                <br>
                <section>
                    <div class="col-log-2">
                        <!-- content blog anda isikan disini-->
                        <ul class="nav nav-tabs pull-left bg-light">
                            <li class="active"><a href="#uve" data-toggle="tab">Unit/Vehicle Equipment</a></li>
                            <li><a href="#uvc" data-toggle="tab">Unit/Vehicle Condition</a></li>
                            <li><a href="#carrosserie" data-toggle="tab">Carrosserie</a></li>
                            <li><a href="#accessories" data-toggle="tab">Accessories</a></li>
                        </ul>
                        <!-- Tab panes content dari tab di atas -->
                        <!-- -----------------------UNIT VEHICLE Unit/Vehicle Equipment --------------------------------- -->
                        <div class="tab-content">
                            <div class="tab-pane active" id="uve">
                                <section class="panel">
                                    <table class="table table-striped m-b-none" id="TableTermsAndConditions">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" width="1%">No</th>
                                                <th rowspan="2" width="31%">Description</th>
                                                <th colspan="2" width="10%" class="text-center">Available</th>
                                                <th rowspan="2" width="28%">Remarks</th>
                                                <th rowspan="2" width="1%">Action</th>
                                            </tr>
                                            <tr>
                                                <th width="8%" class="text-center">Yes</th>
                                                <th width="8%" class="text-center">No</th>
                                            </tr>
                                        </thead>
                                        <!-- Dari Sini Dynamic from viewModel TAB 1-->
                                        <tbody>
                                            @{
    if (Model.BASTEquipmentViewModelList != null)
    {
        var tabEquipment = Model.BASTEquipmentViewModelList.Count(e => e.ComponentType == TabPanesBAST.Equipment);
        if (!tabEquipment.Equals(0))
        {
            for (int i = 0; i < tabEquipment; i++)
            {
                if (Model.BASTEquipmentViewModelList[i].ComponentType.Equals(TabPanesBAST.Equipment))
                {
                    rowNumberEquipment = i + 1;
                                    <tr rownumber="@rowNumberEquipment">
                                        <td>
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[i].IdTbMGTBASTEquipment)
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[i].ComponentType)
                                            <p class="form-control-static">@rowNumberEquipment</p>
                                        </td>
                                        <td>
                                            <div>
                                                @Html.TextBoxFor(o => Model.BASTEquipmentViewModelList[i].Description, null, new { @class = "form-control", @maxlength = "50" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[i].IsAvailable, true)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[i].IsAvailable, false)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(o => Model.BASTEquipmentViewModelList[i].Remark, new { @class = "form-control", @rows = "1" })
                                        </td>
                                        <td>
                                            <div><a href="javascript:void(0);" onclick="DeleteRow(@rowNumberEquipment)" id="print" title="create" class="btn btn-danger btn-xs"><i class="fa fa-minus"></i></a></div>
                                        </td>
                                    </tr>
                }
            }
        }
    }
                                            }
                                        </tbody>
                                        <!-- Dari Sini Dynamic from viewModel TAB 1-->
                                    </table>
                                </section>
                            </div>

                            <!-- -----------------------UNIT VEHICLE Unit/Vehicle Condition --------------------------------- -->
                            <div class="tab-pane" id="uvc">
                                <section class="panel">
                                    <table class="table table-striped m-b-none ">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" width="1%">No</th>
                                                <th rowspan="2" width="31%">Description</th>
                                                <th colspan="2" width="10%" class="text-center">Available</th>
                                                <th rowspan="2" width="28%">Remarks</th>
                                                <th rowspan="2" width="1%">Action</th>
                                            </tr>
                                            <tr>
                                                <th width="8%" class="text-center">Yes</th>
                                                <th width="8%" class="text-center">No</th>
                                            </tr>
                                        </thead>
                                        <!-- Dari Sini Dynamic from viewModel TAB 2-->
                                        <tbody>
                                            @{
    if (Model.BASTEquipmentViewModelList != null)
    {
        var bastConditionViewModelList = Model.BASTEquipmentViewModelList.Where(e => e.ComponentType == TabPanesBAST.Condition).ToList();
        if (!bastConditionViewModelList.Count().Equals(0))
        {
            for (int i = 0; i < bastConditionViewModelList.Count(); i++)
            {
                rowNumberTabCondition = rowNumberEquipment + i;
                rowNumberCondition = i + 1;
                                    <tr rownumber="@(rowNumberTabCondition+1)">
                                        <td>
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].IdTbMGTBASTEquipment)
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].ComponentType)
                                            <p class="form-control-static">@rowNumberCondition</p>
                                        </td>
                                        <td>
                                            <div>
                                                @Html.TextBoxFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].Description, null, new { @class = "form-control", @maxlength = "50" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].IsAvailable, true)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].IsAvailable, false)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCondition].Remark, new { @class = "form-control", @rows = "1" })
                                        </td>
                                        <td>
                                            <div><a href="javascript:void(0);" onclick="deleterow(@(rowNumberTabCondition+1))" id=" print" title="create" class="btn btn-danger btn-xs"><i class="fa fa-minus"></i></a></div>
                                        </td>
                                    </tr>
            }
        }
    }
                                            }
                                        </tbody>
                                        <!-- Dari Sini Dynamic from viewModel TAB 2-->
                                    </table>
                                </section>
                            </div>

                            <!-- -----------------------UNIT VEHICLE carrosserie --------------------------------- -->
                            <div class="tab-pane" id="carrosserie">
                                <section class="panel">
                                    <table class="table table-striped m-b-none" id="TableTermsAndConditions">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" width="1%">No</th>
                                                <th rowspan="2" width="31%">Description</th>
                                                <th colspan="2" width="10%" class="text-center">Available</th>
                                                <th rowspan="2" width="28%">Remarks</th>
                                                <th rowspan="2" width="1%">Action</th>
                                            </tr>
                                            <tr>
                                                <th width="8%" class="text-center">Yes</th>
                                                <th width="8%" class="text-center">No</th>
                                            </tr>
                                        </thead>
                                        <!-- Dari Sini Dynamic from viewModel TAB 3-->
                                        <tbody>
                                            @{
    if (Model.BASTEquipmentViewModelList != null)
    {
        var bastCarroserrieViewModelList = Model.BASTEquipmentViewModelList.Where(e => e.ComponentType == TabPanesBAST.Carroserrie).ToList();
        if (!bastCarroserrieViewModelList.Count().Equals(0))
        {
            for (int i = 0; i < bastCarroserrieViewModelList.Count(); i++)
            {
                rowNumberTabCarroserrie = rowNumberTabCondition + i + 1;
                rowNumberCarroserrie = i + 1;
                                    <tr rownumber="@(rowNumberTabCarroserrie+1)">
                                        <td>
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].IdTbMGTBASTEquipment)
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].ComponentType)
                                            <p class="form-control-static">@rowNumberCarroserrie</p>
                                        </td>
                                        <td>
                                            <div>
                                                @Html.TextBoxFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].Description, null, new { @class = "form-control", @maxlength = "50" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].IsAvailable, true)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].IsAvailable, false)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(o => Model.BASTEquipmentViewModelList[rowNumberTabCarroserrie].Remark, new { @class = "form-control", @rows = "1" })
                                        </td>
                                        <td>
                                            <div><a href="javascript:void(0);" onclick="deleterow(@(rowNumberTabCarroserrie+1))" id=" print" title="create" class="btn btn-danger btn-xs"><i class="fa fa-minus"></i></a></div>
                                        </td>
                                    </tr>
            }
        }
    }
                                            }
                                        </tbody>
                                        <!-- Dari Sini Dynamic from viewModel TAB 3-->
                                    </table>
                                </section>
                            </div>

                            <!-- -----------------------UNIT VEHICLE accessories --------------------------------- -->
                            <div class="tab-pane" id="accessories">
                                <section class="panel">
                                    <table class="table table-striped m-b-none" id="TableTermsAndConditions">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" width="1%">No</th>
                                                <th rowspan="2" width="31%">Description</th>
                                                <th colspan="2" width="10%" class="text-center">Available</th>
                                                <th rowspan="2" width="28%">Remarks</th>
                                                <th rowspan="2" width="1%">Action</th>
                                            </tr>
                                            <tr>
                                                <th width="8%" class="text-center">Yes</th>
                                                <th width="8%" class="text-center">No</th>
                                            </tr>
                                        </thead>
                                        <!-- Dari Sini Dynamic from viewModel TAB 4-->
                                        <tbody>
                                            @{
    if (Model.BASTEquipmentViewModelList != null)
    {
        var bastAccessorieViewModelList = Model.BASTEquipmentViewModelList.Where(e => e.ComponentType == TabPanesBAST.Accessorie).ToList();
        if (!bastAccessorieViewModelList.Count().Equals(0))
        {
            for (int i = 0; i < bastAccessorieViewModelList.Count(); i++)
            {
                rowNumberTabAccessorie = rowNumberTabCarroserrie + i + 1;
                rowNumberAccessorie = i + 1;
                                    <tr rownumber="@(rowNumberTabAccessorie+1)">
                                        <td>
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].IdTbMGTBASTEquipment)
                                            @Html.HiddenFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].ComponentType)
                                            <p class="form-control-static">@rowNumberAccessorie</p>
                                        </td>
                                        <td>
                                            <div>
                                                @Html.TextBoxFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].Description, null, new { @class = "form-control", @maxlength = "50" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].IsAvailable, true)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="radioPositionCenter">
                                                <label>
                                                    @Html.CheckedRadioButtonFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].IsAvailable, false)
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(o => Model.BASTEquipmentViewModelList[rowNumberTabAccessorie].Remark, new { @class = "form-control", @rows = "1" })
                                        </td>
                                        <td>
                                            <div><a href="javascript:void(0);" onclick="deleterow(@(rowNumberTabAccessorie+1))" id=" print" title="create" class="btn btn-danger btn-xs"><i class="fa fa-minus"></i></a></div>
                                        </td>
                                    </tr>
            }
        }
    }
                                            }
                                        </tbody>
                                        <!-- Dari Sini Dynamic from viewModel TAB 4-->
                                    </table>
                                </section>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </section>

        <div class="panel-footer bg-light lter">
            <button class="btn btn-primary" id="add_item_btn_BAST_IN" type="button" onclick="AddItem()"><i class="fa fa-plus"></i> Add Item</button>
        </div>
    </section>

    <section class="panel">
        <header class="panel-heading font-bold">Remark</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <div class="col-lg-12">
                            @Html.TextAreaFor(o => o.Remarks, new { @class = "form-control", @rows = "3" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="panel">
        <header class="panel-heading font-bold">Revision History</header>
        <div class="panel-body">
            <table class="table table-striped table-input m-b-none text-sm" id="RevisionHistory">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.RevHistories != null)
                    {
                        for (int i = 0; i < Model.RevHistories.Count; i++)
                        {
                            <tr>
                                <td width="20">
                                    @Html.HiddenFor(o => Model.RevHistories[i].CreateBy, new { @class = "form-control" })
                                    <label class="form-control">@Model.RevHistories[i].CreateBy</label>
                                </td>
                                <td width="20">
                                    @Html.HiddenFor(o => Model.RevHistories[i].CreateDate, new { @class = "form-control" })
                                    <label class="form-control">@Model.RevHistories[i].CreateDate</label>
                                </td>
                                <td width="20">
                                    @Html.HiddenFor(o => Model.RevHistories[i].Action, new { @class = "form-control" })
                                    <label class="form-control">@Model.RevHistories[i].Action</label>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </section>
    <section class="panel">
        <footer class="panel-footer bg-light lter">
            <input type="hidden" id="submitButtonText" />
            <input id="btn1" name="statusButton" class="btn btn-info" type="submit" value="Save Changes"> &nbsp; <input id="btn2" name="statusButton" class="btn btn-primary" type="submit" value="Save as Final">
        </footer>
    </section>
	<!-- /.vbox -->
    @Html.HiddenFor(o => o.IdTbMGTUnitPrep)
    @Html.HiddenFor(o => o.IdProduct)
    @Html.HiddenFor(o => o.RowVersion)
    @Html.HiddenFor(o => o.CreatedBy)
    @Html.HiddenFor(o => o.CreatedDate)
    @Html.HiddenFor(o => o.LastModifiedBy)
    @Html.HiddenFor(o => o.LastModifiedDate)
    @Html.HiddenFor(o => o.IsCompletedCreateBAST)

}

@{Html.RenderPartial("ModalPopUp");}

<script src="@Url.Content("~/Content/ui-framework/js/autoNumeric-1.9.18.js")"></script>
<script src="@Url.Content("~/Content/ui-framework/js/datatables/jquery.dataTables.min.js")"></script>
<script src="@Url.Content("~/Content/js/BASTUnitReceive.js")"></script>

<script>

    // This must be applied to a form (or an object inside a form).
    jQuery.fn.addHidden = function (name, value) {
        return this.each(function () {
            var input = $("<input>").attr("type", "hidden").attr("name", name).val(value);
            $(this).append($(input));
        });
    };

    //Confirmation Modal
    $('input[name="statusButton"]').on('click', function (e) {
        var submitvalue = $(this).val();
        var msg = '';
        if (submitvalue === 'Save Changes') {
            msg = 'Save Changes';
        } else if (submitvalue === 'Save as Final') {
            msg = 'Save as Final';
        }

        $('.msgModal').text(msg);
        $('#submitButtonText').val(submitvalue);

        var bastNo = $("#IdTbMGTBASTSupCust").val();

        if ((bastNo == null || bastNo == 0)) {
            $('div[class="alert alert-danger"]').remove();

            var htmlAlert = '<div class="alert alert-danger" role="alert">' +
						'<button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>' +
						'Please choose BAST Supplier No or BAST Customer No' +
						'</div>';

            $('hr').after(htmlAlert);
            e.preventDefault();
            goToTop();
            document.getElementById('BASTSPNo').focus();
            return false;
        }

        if (checkDate()) {
            e.preventDefault();
            goToTop();
            return false;
        }
        return true;
    });

    $('#confirmModal').click(function (e) {
        $(this).prop('disabled', true); // S0113435

        UpdateNames();

        var submitvalue = $('#submitButtonText').val();
        $('form:first').addHidden('statusButton', submitvalue).trigger('submit');
    });

    $('.datepicker').datepicker({
        format: '@localeDateFormat.ToLower()'
    });

    $("input[name='IsKEUR'][value='False']").click(function (e) {
        $("#StartKEUR").val("");
        $("#StartKEUR").prop("disabled", true);
        $("#EndKEUR").val("");
        $("#EndKEUR").prop("disabled", true);

        $("#StartKEUR").removeClass('input-validation-error');
        $("#EndKEUR").removeClass('input-validation-error');
        $("span[data-valmsg-for='StartKEUR']").html('');
        $("span[data-valmsg-for='EndKEUR']").html('');
    });

    $("input[name='IsKEUR'][value='True']").click(function (e) {
        $("#StartKEUR").prop("disabled", false);
        $("#EndKEUR").prop("disabled", false);
    });

    $(document).on('focus', ".dateappend", function () { //bind to all instances of class "dateappend".
        $(this).datepicker({
            format: '@localeDateFormat.ToLower()'
        });
    });

    // Global variable for CustomerVisitSurvey.js
    var serverRoot = '@Url.Content("~")';

    $(document).ready(function () {
        //change type submit to button to provide modal popup
        $('input[name="statusButton"]').attr('type', 'button').attr('data-toggle', 'modal').attr('data-target', '#myModal');

        var isCompletedCreateBAST = $('#IsCompletedCreateBAST').val();

        if (isCompletedCreateBAST == 'False') {
            $('input[value="Save as Final"]').prop("disabled", true);
        }

        checkRadioOption();

        $('.thousandSeparator').autoNumeric('init', { vMax: '99999.99' });
    });

</script>
