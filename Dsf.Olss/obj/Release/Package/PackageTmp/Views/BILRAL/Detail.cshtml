@using Dsf.Lib.Constant
@model Dsf.Olss.Models.BILRALViewModel

@{
	ViewBag.Title = "RAL Approval";
    var isPassed = ViewBag.IsPassed;
    var localeDateFormat = System.Threading.Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern;
}
@section Styles{
	<link rel="stylesheet" href=@Url.Content("~/Content/ui-framework/js/datatables/datatables.css") type="text/css" />
	<link rel="stylesheet" href=@Url.Content("~/Content/css/style.css") type="text/css" />
}
<a href="@Url.Action("Index","BILRAL")" class="btn btn-white"><i class="fa fa-chevron-left"></i> Back</a><br><br>
@Message.Display(ViewBag.Success, ViewBag.Error)
<hr/>
@using (Html.BeginForm("Detail", "BILRAL", FormMethod.Post))
{
	<section class="panel">
		<div class="panel-body">

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-lg-4">@Html.LabelFor(x => x.RALNo)</div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(x => x.RALNo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>

			<div class="row">
				<div class="col-lg-6">
					<div class="form-group">
						<div class="col-lg-4">@Html.LabelFor(x => x.AgreementNumber)</div>
						<div class="col-lg-6">
							@Html.TextBoxFor(x => x.AgreementNumber, new { @class = "form-control", @readonly = "readonly" })
							@Html.HiddenFor(x => x.IdTb_BIL_RAL)
						</div>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-lg-6">
					<div class="form-group">
						<div class="col-lg-4">@Html.LabelFor(x => x.RALIssueDate)</div>
						<div class="col-lg-6">
							@Html.TextBoxFor(x => x.RALIssueDate, "{0:" + localeDateFormat + "}", new { @class = "form-control", @readonly = "readonly" })
						</div>
					</div>
				</div>
			</div>

		</div>
	</section>

	<section class="panel">
		<header class="panel-heading font-bold">Endorser</header>
		<div class="panel-body">

			<div class="row">
				<div class="col-lg-6">
					<div class="form-group">
						<div class="col-lg-4">@Html.LabelFor(x => x.EndorserName)</div>
						<div class="col-lg-6">
							@Html.TextBoxFor(x => x.EndorserName, new { @class = "form-control mandatory", @readonly = "readonly" })
						</div>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-lg-6">
					<div class="form-group">
						<div class="col-lg-4">@Html.LabelFor(x => x.EndorserPosition)</div>
						<div class="col-lg-6">
							@Html.TextBoxFor(x => x.EndorserPosition, new { @class = "form-control mandatory", @readonly = "readonly" })
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<section class="panel">
		<header class="panel-heading font-bold">Endorsee</header>
		<div class="panel-body">
			<table class="table table-striped m-b-none">
				<thead>
					<tr>
						<th>Name</th>
						<th>Identity Number</th>
						<th>Address</th>
						<th>Phone Number</th>
					</tr>
				</thead>
				<tbody id="container">
					@for (int i = 0; i < Model.RALEndorseeDtl.Count; i++)
					{
						<tr>
							<td>@Html.TextBoxFor(x => x.RALEndorseeDtl[i].EndorseeName, new { @class = "form-control mandatory EndorseeName", @readonly="readonly" })</td>
							<td>@Html.TextBoxFor(x => x.RALEndorseeDtl[i].EndorseeID, new { @class = "form-control mandatory EndorseeID", @readonly = "readonly" })</td>
							<td>@Html.TextAreaFor(x => x.RALEndorseeDtl[i].EndorseeAddress, new { @class = "form-control mandatory EndorseeAddress", @readonly = "readonly" })</td>
							<td>@Html.TextBoxFor(x => x.RALEndorseeDtl[i].EndorseePhone, new { @class = "form-control mandatory EndorseePhone", @readonly = "readonly" })</td>
							<td style="text-align: center;">
								@Html.HiddenFor(x => x.RALEndorseeDtl[i].IdTb_BIL_RALEndorseeDtl, new { @class = "IdTb_BIL_RALEndorseeDtl" })
								<button class='btn btn-danger deleterow' type='button' style="height: 30px; padding-top: 4px;" onclick="DeleteRowEndorsee(this)" disabled="disabled"><i class="fa fa-minus"></i></button>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</section>

	<section class="panel">
		<header class="panel-heading font-bold">Object List</header>
		<table class="table table-striped table-input m-b-none text-sm">
			<thead>
				<tr>
					<th class="text-center">Number</th>
					<th class="text-center">Object Type</th>
					<th class="text-center">Chassis No</th>
					<th class="text-center">Engine No</th>
					<th class="text-center">Police No </th>
					<th class="text-center">Year</th>
					<th class="text-center">Color</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < Model.RALObjectDtl.Count; i++)
				{
					<tr>
						<td class="font-bold text-right">@(i + 1)</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].ObjectType, new { @class = "form-control RALObjectDtlObjectType", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].ChassisNumber, new { @class = "form-control RALObjectDtlChassisNumber", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].EngineNumber, new { @class = "form-control RALObjectDtlEngineNumber", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].PoliceNumber, new { @class = "form-control RALObjectDtlPoliceNumber", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].Year, new { @class = "form-control RALObjectDtlYear", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td>@Html.TextBoxFor(x => x.RALObjectDtl[i].Colour, new { @class = "form-control RALObjectDtlColour", @readonly = "readonly", @style = "background-color: white;" })</td>
						<td style="text-align: center;">
							@Html.HiddenFor(x => x.RALObjectDtl[i].IdTb_BIL_RALObjectDtl, new { @class = "IdTb_BIL_RALObjectDtl" })
							<button class='btn btn-danger deleterow' type='button' style="height: 30px; padding-top: 4px;" onclick="" disabled="disabled"><i class="fa fa-minus"></i></button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</section>
	<section class="panel">
		<header class="panel-heading font-bold">Remarks</header>
		<div class="panel-body">
			<div class="row">
				<div class="col-lg-12">
					<div class="form-group">
						<div class="col-lg-12">@Html.TextAreaFor(o => o.Remarks, new { @class = "form-control", @rows = "3"})</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	<section class="panel">
		<header class="panel-heading font-bold">Revision History</header>
		<div class="panel-body">
			<table class="table table-striped table-input m-b-none text-sm">
				<thead>
					<tr>
						<th>User Name</th>
						<th>Date</th>
						<th>Status</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var histories in Model.RevHistories)
					{
						<tr>
							<td width="20">
								<label class="form-control">@histories.CreateBy</label>
							</td>
							<td width="20">
								<label class="form-control">@histories.CreateDate</label>
							</td>
							<td width="20">
								<label class="form-control">@histories.Action</label>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</section>

	if (ViewBag.IsPassed == true)
	{
		<section class="panel">
			<footer class="panel-footer bg-light lter">
				@if (ViewBag.ApprovalLevelCode == StatusCode.Approve)
				{
					<input type="hidden" id="submitButtonText" />
					@StateButton.BilRALStateButton("approve")
				}
				else if (ViewBag.ApprovalLevelCode == StatusCode.Check)
				{
				    if ((ViewBag.JobTitles == JobTitles.MO || ViewBag.JobTitles == JobTitles.MOOPL) && string.Equals(ViewBag.CreatorSkd, Dsf.Olss.Common.SimpleSessionPersister.Username, StringComparison.CurrentCultureIgnoreCase))
				    {
				        <input type="hidden" id="submitButtonText" />
				        @StateButton.BilRALStateButton("check")
				    }
				    else if (ViewBag.JobTitles != JobTitles.MO && ViewBag.JobTitles != JobTitles.MOOPL)
				    {
				        <input type="hidden" id="submitButtonText" />
				        @StateButton.BilRALStateButton("check")
                    }
                    else
                    {
                        <script>
                            $(document).ready(function () {
                                $("#Remarks").attr("readonly", "readonly");
                            });
                        </script>
                    }
                }
                else
                {
				    <script>
                        $(document).ready(function () {
                            $("#Remarks").attr("readonly", "readonly");
    				    });
    				</script>
				}
			</footer>
		</section>
	}
}

@{Html.RenderPartial("ModalPopUp");}

@section Scripts{
	<script src="@Url.Content("~/Content/js/Olss.js")"></script>
	<script src="@Url.Content("~/Content/ui-framework/js/datatables/jquery.dataTables.min.js")"></script>
	<script src="@Url.Content("~/Content/ui-framework/js/select2/select2.min.js")"></script>
	<script src="@Url.Content("~/Content/js/BILRAL.js")"></script>>
	<script type="text/javascript">
	    var serverRoot = '@Url.Content("~")';
	    var isPassed = '@isPassed';
	    $(document).ready(function () {
	        $('input[name="statusButton"]').attr('type', 'button').attr('data-toggle', 'modal').attr('data-target', '#confirmationModal');
		    
		    
	        if (isPassed == '') $("#Remarks").attr("readonly", "readonly");
	    });

	    // This must be applied to a form (or an object inside a form).
	    jQuery.fn.addHidden = function (name, value) {
	        return this.each(function () {
	            var input = $("<input>").attr("type", "hidden").attr("name", name).val(value);
	            $(this).append($(input));
	        });
	    };

	    //Confirmation Modal
	    $('input[name="statusButton"]').on('click', function (e) {
	        var submitvalue = $(this).val();
	        var msg = "";
	        var cm = "";
	        if (submitvalue === 'Revise') {
	            msg = 'Revise';
	            cm = "revise RAL";
	        } else if (submitvalue === 'Reject') {
	            msg = 'Reject';
	            cm = "reject RAL";
	        } else if (submitvalue === 'Check') {
	            msg = 'Check';
	            cm = "check RAL";
	        } else if (submitvalue === 'Approve') {
	            msg = 'Approve';
	            cm = "approve RAL";
	        }

	        $('.msgModal').text(msg);
	        $('.confirmationMessage').text(cm);
	        $('#submitButtonText').val(submitvalue);

	        if ($(this).val() == "Revise" || $(this).val() == "Reject") {
	            if (!ValidationRemarks()) {
	                e.preventDefault();
	                goToTop();
	                return false;
	            }
	        }
	        return true;
	    });

	    $('#confirmModal').click(function (e) {
	        var submitvalue = $('#submitButtonText').val();
	        $('form:first').addHidden('statusButton', submitvalue).trigger('submit');
	        $(this).prop('disabled', true);
	    });

	    function ValidationRemarks() {
	        if ($('.alert-danger').length != 0) {
	            $('.alert-danger').remove();
	        }
	        var htmlAlert = '';
	        var remarks = $('#Remarks').val();

	        if (remarks == "" || remarks == null) {
	            htmlAlert +=
	                '<div class="alert alert-danger" role="alert">' +
	                    '<button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>' +
	                    'Please fill Remarks' +
	                    '</div>';
	            $('form').before(htmlAlert);
	            return false;
	        }
	        return true;
	    }
	</script>
}
