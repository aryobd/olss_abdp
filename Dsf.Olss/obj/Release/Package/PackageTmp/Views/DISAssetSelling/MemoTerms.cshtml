@model Dsf.Olss.Models.DISAssetSellingViewModel

@if ((Request.Url.AbsolutePath.Contains("AddDirectSelling") || Request.PhysicalPath.Contains("AddCarOwnershipProgram") || Request.PhysicalPath.Contains("EditDirectSelling") || Request.PhysicalPath.Contains("EditCarOwnershipProgram")) && ViewBag.IsCreator)
{
    <section class="panel">
        <header class="panel-heading font-bold">
            Terms and Conditions
            <i class="fa fa-info-sign text-muted" data-toggle="tooltip" data-placement="bottom" data-title="ajax to load the data."></i>
        </header>
        <div class="table-responsive">
            <table class="table table-striped table-input m-b-none text-sm" id="term-table">
                <thead>
                    <tr>
                        <th width="400">Terms and Conditions</th>
                        <th width="50">Parameter</th>
                        <th width="5" class="text-center">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.MemoTermConditions != null)
                    {
                        for (var i = 0; i < Model.MemoTermConditions.Count; i++)
                        {
                            <tr class="rowTerm" id="row_@i">
                                <td>
                                    <div class="input-group">
                                        @Html.HiddenFor(o => o.MemoTermConditions[i].IdTb_DIS_MemoTerm)
                                        @Html.HiddenFor(o => o.MemoTermConditions[i].IdTb_DIS_MemoTerm_Ref)
                                        @Html.HiddenFor(o => o.MemoTermConditions[i].Remark)
                                        @Html.TextBoxFor(o => o.MemoTermConditions[i].TermDescFirst, null, new { @class = "form-control", @readonly = "true" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-white" data-toggle="modal" data-target="#termConditionModal" type="button" onclick="LoadTermAndCondition(@i)">...</button>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    @Html.TextBoxFor(o => o.MemoTermConditions[i].DefaultValue, null, new { @class = "form-control" })
                                </td>
                                <td class="text-center">
                                    <span class="input-group-btn">
                                        <button class="btn btn-danger font-bold add_item fa fa-minus" type="button" onclick="deleteRowTerm(@i)"></button>
                                    </span>
                                </td>
                            </tr>
                        }
                    }


                </tbody>
            </table>
            <div class="panel-footer bg-light lter">
                <a id="addTerm" href="#" class="btn btn-primary"><i class="fa fa-plus"></i> Add New Term & Condition</a>
            </div>
        </div>
    </section>
}
else
{
    <section class="panel">
        <header class="panel-heading font-bold">Terms and Conditions</header>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <div class="col-lg-12">
                            @if (Model.MemoTermConditions.Count != 0)
                            {
                                var num = 1;
                                <textarea class="form-control" rows="6" readonly="readonly">
                                    @for (int i = 0; i < Model.MemoTermConditions.Count; i++)
                                    {
                                        var counts = Model.MemoTermConditions.Count;
                                        if (i == (counts - 1))
                                        {
                                            @(num + ". " + Model.MemoTermConditions[i].TermDescFirst)
                                        }
                                        else
                                        {
                                            @(num + ". " + Model.MemoTermConditions[i].TermDescFirst + Environment.NewLine)
                                        }
                                        num++;
                                    }
                                </textarea>
                            }
                            else
                            {
                                <textarea class="form-control" rows="6" readonly="readonly"></textarea>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
